import{_ as d,j as i}from"./vendor-tTApdY0Y.bundle.js";class s extends BaseViewController{constructor(e={}){d.defaults(e,{el:"#round_interval_policy_view_container",punch_type_array:null,round_type_array:null,condition_type_array:null,date_api:null}),super(e)}init(e){this.edit_view_tpl="RoundIntervalPolicyEditView.html",this.permission_id="round_policy",this.viewId="RoundIntervalPolicy",this.script_name="RoundIntervalPolicyView",this.table_name_key="round_interval_policy",this.context_menu_name=i.i18n._("Rounding Policy"),this.navigation_label=i.i18n._("Rounding Policy"),this.api=TTAPI.APIRoundIntervalPolicy,this.date_api=TTAPI.APITTDate,this.render(),this.buildContextMenu(),this.initData()}initOptions(){var e=[{option_name:"punch_type",api:this.api},{option_name:"round_type",api:this.api},{option_name:"condition_type",api:this.api}];this.initDropDownOptions(e)}buildEditViewUI(){super.buildEditViewUI();var e=this,a={tab_rounding_policy:{label:i.i18n._("Rounding Policy")},tab_audit:!0};this.setTabModel(a),this.navigation.AComboBox({api_class:TTAPI.APIRoundIntervalPolicy,id:this.script_name+"_navigation",allow_multiple_selection:!1,layout_name:"global_round_interval",navigation_mode:!0,show_search_inputs:!0}),this.setNavigation();var n=this.edit_view_tab.find("#tab_rounding_policy"),o=n.find(".first-column");this.edit_view_tabs[0]=[],this.edit_view_tabs[0].push(o);var t=Global.loadWidgetByName(FormItemType.TEXT_INPUT);t.TTextInput({field:"name",width:"100%"}),this.addEditFieldToColumn(i.i18n._("Name"),t,o,""),t.parent().width("45%"),t=Global.loadWidgetByName(FormItemType.TEXT_AREA),t.TTextArea({field:"description",width:"100%"}),this.addEditFieldToColumn(i.i18n._("Description"),t,o,"",null,null,!0),t.parent().width("45%"),t=Global.loadWidgetByName(FormItemType.COMBO_BOX),t.TComboBox({field:"punch_type_id",set_empty:!1}),t.setSourceData(e.punch_type_array),this.addEditFieldToColumn(i.i18n._("Punch Type"),t,o),t=Global.loadWidgetByName(FormItemType.COMBO_BOX),t.TComboBox({field:"round_type_id",set_empty:!1}),t.setSourceData(e.round_type_array),this.addEditFieldToColumn(i.i18n._("Round Type"),t,o),t=Global.loadWidgetByName(FormItemType.TEXT_INPUT),t.TTextInput({field:"round_interval",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(i.i18n._("Interval"),t,o,"",null),t=Global.loadWidgetByName(FormItemType.TEXT_INPUT),t.TTextInput({field:"grace",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(i.i18n._("Grace Period"),t,o,"",null),t=Global.loadWidgetByName(FormItemType.CHECKBOX),t.TCheckbox({field:"strict"}),this.addEditFieldToColumn(i.i18n._("Strict Schedule"),t,o,""),t=Global.loadWidgetByName(FormItemType.SEPARATED_BOX),t.SeparatedBox({label:i.i18n._("Only Round Punches Within The Following Window")}),this.addEditFieldToColumn("",t,o,"",null,!0,!1,"sp_box"),t=Global.loadWidgetByName(FormItemType.COMBO_BOX),t.TComboBox({field:"condition_type_id",set_empty:!1}),t.setSourceData(e.condition_type_array),this.addEditFieldToColumn(i.i18n._("Window Based On"),t,o,"",null,!0),t=Global.loadWidgetByName(FormItemType.TIME_PICKER),t.TTimePicker({field:"condition_static_time"}),this.addEditFieldToColumn(i.i18n._("Static Time"),t,o,"",null,!0),t=Global.loadWidgetByName(FormItemType.TEXT_INPUT),t.TTextInput({field:"condition_static_total_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(i.i18n._("Static Total Time"),t,o,"",null,!0),t=Global.loadWidgetByName(FormItemType.TEXT_INPUT),t.TTextInput({field:"condition_start_window",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(i.i18n._("Start Window"),t,o,"",null,!0),t=Global.loadWidgetByName(FormItemType.TEXT_INPUT),t.TTextInput({field:"condition_stop_window",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(i.i18n._("Stop Window"),t,o,"",null,!0)}buildSearchFields(){super.buildSearchFields(),this.search_fields=[new SearchField({label:i.i18n._("Name"),in_column:1,field:"name",multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.TEXT_INPUT}),new SearchField({label:i.i18n._("Punch Type"),in_column:1,field:"punch_type_id",multiple:!0,basic_search:!0,adv_search:!1,layout_name:"global_option_column",form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:i.i18n._("Round Type"),in_column:1,field:"round_type_id",multiple:!0,basic_search:!0,adv_search:!1,layout_name:"global_option_column",form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:i.i18n._("Created By"),in_column:2,field:"created_by",layout_name:"global_user",api_class:TTAPI.APIUser,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:i.i18n._("Updated By"),in_column:2,field:"updated_by",layout_name:"global_user",api_class:TTAPI.APIUser,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX})]}onFormItemChange(e,a){this.setIsChanged(e),this.setMassEditingFieldsWhenFormChange(e);var n=e.getField(),o=e.getValue();this.current_edit_record[n]=o,n==="condition_type_id"&&this.onConditionTypeChange(),a||this.validate()}onConditionTypeChange(){var e=parseInt(this.current_edit_record.condition_type_id);if(this.edit_view_form_item_dic.sp_box,this.edit_view_form_item_dic.condition_type_id,this.edit_view_form_item_dic.condition_static_time,this.edit_view_form_item_dic.condition_static_total_time,this.edit_view_form_item_dic.condition_start_window,this.edit_view_form_item_dic.condition_stop_window,Global.getProductEdition()<=10){this.detachElement("condition_type_id"),this.detachElement("sp_box"),this.detachElement("condition_static_total_time"),this.detachElement("condition_start_window"),this.detachElement("condition_stop_window"),this.detachElement("condition_static_time");return}this.detachElement("condition_static_total_time"),this.detachElement("condition_start_window"),this.detachElement("condition_stop_window"),this.detachElement("condition_static_time"),e==10||e==20?(this.attachElement("condition_start_window"),this.attachElement("condition_stop_window")):e==30?(this.attachElement("condition_static_time"),this.attachElement("condition_stop_window"),this.attachElement("condition_start_window")):e==40&&(this.attachElement("condition_static_total_time"),this.attachElement("condition_stop_window"),this.attachElement("condition_start_window")),this.editFieldResize()}setEditViewDataDone(){super.setEditViewDataDone(),this.onConditionTypeChange()}}export{s as RoundIntervalPolicyViewController};
//# sourceMappingURL=RoundIntervalPolicyViewController-eySO0uan.bundle.js.map
