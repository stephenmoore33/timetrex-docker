import{_ as r,j as _}from"./vendor-tTApdY0Y.bundle.js";class m extends BaseViewController{constructor(t={}){r.defaults(t,{el:"#job_item_amendment_view_container",current_default_record:{}}),super(t)}init(t){this.edit_view_tpl="JobItemAmendmentEditView.html",this.permission_id="job_item",this.viewId="JobItemAmendment",this.script_name="JobItemAmendmentView",this.table_name_key="job_item_amendment",this.context_menu_name=_.i18n._("Task Amendments"),this.navigation_label=_.i18n._("Task Amendment"),this.api=TTAPI.APIJobItemAmendment,this.job_api=TTAPI.APIJob,this.job_item_api=TTAPI.APIJobItem,this.render(),this.buildContextMenu(),this.sub_view_mode||this.initData()}getCustomContextMenuModel(){var t={exclude:["copy"],include:[]};return t}buildEditViewUI(){super.buildEditViewUI();var t={tab_task_amendment:{label:_.i18n._("Task Amendment")},tab_audit:!0};this.setTabModel(t),this.navigation.AComboBox({api_class:TTAPI.APIJobItemAmendment,id:this.script_name+"_navigation",allow_multiple_selection:!1,layout_name:"global_job_item_amendment",navigation_mode:!0,show_search_inputs:!0}),this.setNavigation();var a=this.edit_view_tab.find("#tab_task_amendment"),i=a.find(".first-column");this.edit_view_tabs[0]=[],this.edit_view_tabs[0].push(i);var e,d;e=Global.loadWidgetByName(FormItemType.AWESOME_BOX),e.AComboBox({api_class:TTAPI.APIJob,allow_multiple_selection:!1,layout_name:"global_job",show_search_inputs:!0,set_empty:!1,setRealValueCallBack:function(l){l&&o.setValue(l.manual_id)},field:"job_id"}),d=_("<div class='widget-h-box'></div>");var o=Global.loadWidgetByName(FormItemType.TEXT_INPUT);o.TTextInput({field:"job_quick_search",disable_keyup_event:!0}),o.addClass("job-coder"),d.append(o),d.append(e),this.addEditFieldToColumn(_.i18n._("Job"),[e,o],i,"",d),e=Global.loadWidgetByName(FormItemType.AWESOME_BOX),e.AComboBox({api_class:TTAPI.APIJobItem,allow_multiple_selection:!1,layout_name:"global_job_item",show_search_inputs:!0,set_empty:!0,setRealValueCallBack:function(l){l&&s.setValue(l.manual_id)},field:"item_id"}),d=_("<div class='widget-h-box'></div>");var s=Global.loadWidgetByName(FormItemType.TEXT_INPUT);s.TTextInput({field:"job_item_quick_search",disable_keyup_event:!0}),s.addClass("job-coder"),d.append(s),d.append(e),this.addEditFieldToColumn(_.i18n._("Task"),[e,s],i,"",d),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"estimate_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(_.i18n._("Estimated Time"),e,i,"",null,!0,!0),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"billable_rate",width:86}),this.addEditFieldToColumn(_.i18n._("Billable Rate"),e,i),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"minimum_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(_.i18n._("Minimum Billable Time"),e,i,"",null),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"estimate_quantity",width:150}),this.addEditFieldToColumn(_.i18n._("Estimated Quantity"),e,i),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"estimate_bad_quantity",width:150}),this.addEditFieldToColumn(_.i18n._("Estimated Bad Quantity"),e,i),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"bad_quantity_rate",width:150}),this.addEditFieldToColumn(_.i18n._("Bad Quantity Rate"),e,i)}setCurrentEditRecordData(){Global.isFalseOrNull(this.current_edit_record.user_id)&&(this.current_edit_record.user_id=LocalCacheData.getLoginUser().id);for(var t in this.current_edit_record){var a=this.edit_view_ui_dic[t];if(Global.isSet(a))switch(t){case"item_id":var i={};i.filter_data={job_id:this.current_edit_record.job_id},a.setDefaultArgs(i),a.setValue(this.current_edit_record[t]);break;case"job_quick_search":break;case"job_item_quick_search":break;default:Global.isSet(this.current_default_record[t])&&(this.current_edit_record[t]=this.current_default_record[t]),a.setValue(this.current_edit_record[t]);break}}this.collectUIDataToCurrentEditRecord(),this.setEditViewDataDone()}setEditViewDataDone(){this.current_default_record={},super.setEditViewDataDone()}onFormItemChange(t,a){var i=this;this.setIsChanged(t),this.setMassEditingFieldsWhenFormChange(t);var e=t.getField(),d=t.getValue();switch(this.current_edit_record[e]=d,e){case"job_id":this.edit_view_ui_dic.job_quick_search.setValue(t.getValue(!0)&&t.getValue(!0).manual_id?t.getValue(!0).manual_id:""),this.setJobItemValueWhenJobChanged(t.getValue(!0),"item_id",{job_id:i.current_edit_record.job_id}),this.edit_view_ui_dic.job_quick_search.setCheckBox(!0);break;case"item_id":this.edit_view_ui_dic.job_item_quick_search.setValue(t.getValue(!0)&&t.getValue(!0).manual_id?t.getValue(!0).manual_id:""),this.setJobItemAmendmentDefaultData(),this.edit_view_ui_dic.job_item_quick_search.setCheckBox(!0);break;case"job_quick_search":case"job_item_quick_search":this.onJobQuickSearch(e,d,"job_id","item_id"),TTPromise.wait("BaseViewController","onJobQuickSearch",function(){i.setJobItemAmendmentDefaultData()}),TTPromise.wait("BaseViewController","setJobItemValueWhenJobChanged",function(){i.setJobItemAmendmentDefaultData()});var a=!0;break}a||this.validate()}validate(){var t=this,a={};if(this.is_mass_editing){t.sub_view_mode&&t.parent_key&&(a[t.parent_key]=t.parent_value);for(var i in this.edit_view_ui_dic)if(this.edit_view_ui_dic.hasOwnProperty(i)){var e=this.edit_view_ui_dic[i];Global.isSet(e.isChecked)&&e.isChecked()&&e.getEnabled()&&(a[i]=e.getValue())}}else a=this.current_edit_record;a=this.uniformVariable(a),this.api["validate"+this.api.key_name](a,{onResult:function(d){t.validateResult(d)}})}setJobItemAmendmentDefaultData(){var t=this,a;TTUUID.isUUID(this.current_edit_record.item_id)&&this.current_edit_record.item_id!=TTUUID.zero_id&&this.is_add&&(a=this.current_edit_record.item_id,this.api["get"+this.api.key_name+"DefaultData"](a,{onResult:function(i){var e=i.getResult();e||(e=[]),t.current_default_record=e,t.setCurrentEditRecordData()}}))}}m.loadSubView=function(n,t,a){Global.loadViewSource("JobItemAmendment","SubJobItemAmendmentView.html",function(i){var e={},d=r.template(i);Global.isSet(t)&&t(),Global.isSet(n)&&(n.html(d(e)),Global.isSet(a)&&TTPromise.wait("BaseViewController","initialize",function(){a(sub_job_item_amendment_view_controller)}))})};export{m as JobItemAmendmentViewController};
//# sourceMappingURL=JobItemAmendmentViewController-Dt-zppPU.bundle.js.map
