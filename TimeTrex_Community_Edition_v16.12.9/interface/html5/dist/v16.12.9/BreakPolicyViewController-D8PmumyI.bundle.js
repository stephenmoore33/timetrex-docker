import{_ as o,j as t}from"./vendor-tTApdY0Y.bundle.js";class r extends BaseViewController{constructor(a={}){o.defaults(a,{el:"#break_policy_view_container",type_array:null,auto_detect_type_array:null,allocation_type_array:null,date_api:null}),super(a)}init(a){this.edit_view_tpl="BreakPolicyEditView.html",this.permission_id="break_policy",this.viewId="BreakPolicy",this.script_name="BreakPolicyView",this.table_name_key="break_policy",this.context_menu_name=t.i18n._("Break Policy"),this.navigation_label=t.i18n._("Break Policy"),this.api=TTAPI.APIBreakPolicy,this.date_api=TTAPI.APITTDate,this.render(),this.buildContextMenu(),this.initData()}initOptions(){var a=[{option_name:"type",api:this.api},{option_name:"auto_detect_type",api:this.api},{option_name:"allocation_type",api:this.api}];this.initDropDownOptions(a)}buildEditViewUI(){super.buildEditViewUI();var a=this,_={tab_break_policy:{label:t.i18n._("Break Policy")},tab_audit:!0};this.setTabModel(_),this.navigation.AComboBox({api_class:TTAPI.APIBreakPolicy,id:this.script_name+"_navigation",allow_multiple_selection:!1,layout_name:"global_break",navigation_mode:!0,show_search_inputs:!0}),this.setNavigation();var l=this.edit_view_tab.find("#tab_break_policy"),i=l.find(".first-column");this.edit_view_tabs[0]=[],this.edit_view_tabs[0].push(i);var e=Global.loadWidgetByName(FormItemType.TEXT_INPUT);e.TTextInput({field:"name",width:"100%"}),this.addEditFieldToColumn(t.i18n._("Name"),e,i,""),e.parent().width("45%"),e=Global.loadWidgetByName(FormItemType.TEXT_AREA),e.TTextArea({field:"description",width:"100%"}),this.addEditFieldToColumn(t.i18n._("Description"),e,i,"",null,null,!0),e.parent().width("45%"),e=Global.loadWidgetByName(FormItemType.COMBO_BOX),e.TComboBox({field:"type_id",set_empty:!1}),e.setSourceData(a.type_array),this.addEditFieldToColumn(t.i18n._("Type"),e,i),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"trigger_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Active After"),e,i,"",null),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"amount",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Deduction/Addition Time"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.COMBO_BOX),e.TComboBox({field:"auto_detect_type_id",set_empty:!1}),e.setSourceData(a.auto_detect_type_array),this.addEditFieldToColumn(t.i18n._("Auto-Detect Breaks By"),e,i),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"minimum_punch_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Minimum Punch Time"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"maximum_punch_time",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Maximum Punch Time"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"start_window",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Start Window"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.TEXT_INPUT),e.TTextInput({field:"window_length",mode:"time_unit",need_parser_sec:!0}),this.addEditFieldToColumn(t.i18n._("Window Length"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.CHECKBOX),e.TCheckbox({field:"include_break_punch_time"}),this.addEditFieldToColumn(t.i18n._("Include Any Punched Time for Break"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.CHECKBOX),e.TCheckbox({field:"include_multiple_breaks"}),this.addEditFieldToColumn(t.i18n._("Include Multiple Breaks"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.COMBO_BOX),e.TComboBox({field:"allocation_type_id",set_empty:!1}),e.setSourceData(a.allocation_type_array),this.addEditFieldToColumn(t.i18n._("Allocation Type"),e,i,"",null,!0),e=Global.loadWidgetByName(FormItemType.AWESOME_BOX),e.AComboBox({api_class:TTAPI.APIPayCode,allow_multiple_selection:!1,layout_name:"global_pay_code",show_search_inputs:!0,set_empty:!0,field:"pay_code_id"}),this.addEditFieldToColumn(t.i18n._("Pay Code"),e,i),e=Global.loadWidgetByName(FormItemType.AWESOME_BOX),e.AComboBox({api_class:TTAPI.APIPayFormulaPolicy,allow_multiple_selection:!1,layout_name:"global_pay_formula_policy",show_search_inputs:!0,set_empty:!0,field:"pay_formula_policy_id",custom_first_label:t.i18n._("-- Defined by Pay Code --"),added_items:[{value:TTUUID.zero_id,label:t.i18n._("-- Defined by Pay Code --")}]}),this.addEditFieldToColumn(t.i18n._("Pay Formula Policy"),e,i)}buildSearchFields(){super.buildSearchFields(),this.search_fields=[new SearchField({label:t.i18n._("Name"),in_column:1,field:"name",multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.TEXT_INPUT}),new SearchField({label:t.i18n._("Type"),in_column:1,field:"type_id",multiple:!0,basic_search:!0,adv_search:!1,layout_name:"global_option_column",form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:t.i18n._("Pay Code"),in_column:1,field:"pay_code_id",layout_name:"global_pay_code",api_class:TTAPI.APIPayCode,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:t.i18n._("Pay Formula Policy"),in_column:1,field:"pay_formula_policy_id",layout_name:"global_pay_formula_policy",api_class:TTAPI.APIPayFormulaPolicy,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:t.i18n._("Created By"),in_column:2,field:"created_by",layout_name:"global_user",api_class:TTAPI.APIUser,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX}),new SearchField({label:t.i18n._("Updated By"),in_column:2,field:"updated_by",layout_name:"global_user",api_class:TTAPI.APIUser,multiple:!0,basic_search:!0,adv_search:!1,form_item_type:FormItemType.AWESOME_BOX})]}onFormItemChange(a,_){this.setIsChanged(a),this.setMassEditingFieldsWhenFormChange(a);var l=a.getField(),i=a.getValue();this.current_edit_record[l]=i,l==="type_id"?this.onTypeChange():l==="auto_detect_type_id"&&this.onAutoDetectTypeChange(),this.editFieldResize(0),_||this.validate()}setEditViewDataDone(){super.setEditViewDataDone(),this.onTypeChange(),this.onAutoDetectTypeChange(),this.editFieldResize(0)}onTypeChange(){this.edit_view_form_item_dic.amount.find(".edit-view-form-item-label").text(t.i18n._("Break Time")),this.current_edit_record.type_id==10||this.current_edit_record.type_id==15?(this.attachElement("include_break_punch_time"),this.attachElement("allocation_type_id"),this.attachElement("include_multiple_breaks")):this.current_edit_record.type_id==20&&(this.detachElement("include_break_punch_time"),this.detachElement("allocation_type_id"),this.detachElement("include_multiple_breaks")),this.editFieldResize()}onAutoDetectTypeChange(){this.current_edit_record.auto_detect_type_id==10?(this.attachElement("start_window"),this.attachElement("window_length"),this.detachElement("minimum_punch_time"),this.detachElement("maximum_punch_time")):(this.current_edit_record.auto_detect_type_id==20||this.current_edit_record.auto_detect_type_id==25)&&(this.detachElement("start_window"),this.detachElement("window_length"),this.attachElement("minimum_punch_time"),this.attachElement("maximum_punch_time")),this.editFieldResize()}}export{r as BreakPolicyViewController};
//# sourceMappingURL=BreakPolicyViewController-D8PmumyI.bundle.js.map
