{"version":3,"file":"EmbeddedMessageCommon-DY_cePqF.bundle.js","sources":["../../views/common/EmbeddedMessageCommon.js"],"sourcesContent":["import linkifyStr from \"linkify-string\";\n\nexport var EmbeddedMessage = {\n\tmessage_control_api: null,\n\tevent_bus: new TTEventBus({ view_id: 'embedded_message' }),\n\t/**\n\t * Initializes embedded messages with a call to EmbeddedMessage.init()\n\t * Requires that initUI be called when the editviewui is built\n\t *\n\t * @param item_id (current_edit_record.id)\n\t * @param object_type (50 for requests)\n\t */\n\tinit: function( item_id, object_type, view_object, edit_view, edit_view_tab, edit_view_ui_dic, callback ) {\n\t\tvar args = {};\n\t\targs.filter_data = {};\n\t\targs.filter_data.object_type_id = object_type;\n\t\targs.filter_data.object_id = item_id;\n\t\tvar read_ids = [];\n\t\tthis.message_control_api = TTAPI.APIMessageControl;\n\n\t\tvar $this = this;\n\t\tthis.message_control_api['getEmbeddedMessage']( args, {\n\t\t\tonResult: function( res ) {\n\t\t\t\t// Error: Uncaught TypeError: Cannot read property 'setValue' of undefined in interface/html5/#!m=RequestAuthorization&id=1306 line 1547\n\t\t\t\tif ( !edit_view || !edit_view_ui_dic['from'] ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar data = res.getResult();\n\t\t\t\tif ( Global.isArray( data ) ) {\n\t\t\t\t\t$( edit_view.find( '.separate' ) ).css( 'display', 'block' );\n\n\t\t\t\t\tview_object.messages = data;\n\n\t\t\t\t\tvar container = $( '<div></div>' );\n\n\t\t\t\t\tfor ( var key in data ) {\n\n\t\t\t\t\t\tvar currentItem = data[key];\n\t\t\t\t\t\t/* jshint ignore:start */\n\t\t\t\t\t\tif ( currentItem.status_id == 10 ) {\n\t\t\t\t\t\t\tread_ids.push( currentItem.id );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* jshint ignore:end */\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * This can be a little confusing to look at so here's the process:\n\t\t\t\t\t\t * 1. Set the hidden fields' values\n\t\t\t\t\t\t * 2. Clone the message template\n\t\t\t\t\t\t * 3. Append the message templage to container\n\t\t\t\t\t\t * 4. Append the contents of the the container variable to the visible form\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar from = currentItem.from_first_name + ' ' + currentItem.from_last_name + ' @ ' + currentItem.updated_date;\n\t\t\t\t\t\tedit_view_ui_dic['from'].setValue( from );\n\n\t\t\t\t\t\tedit_view_ui_dic['subject'].setValue( Global.htmlDecode( currentItem.subject ) );\n\t\t\t\t\t\t// The function setValue is not used on the body to avoid double encoding issues on the content as linkify (parses links in text) already handles that.\n\t\t\t\t\t\tedit_view_ui_dic['body'].html( linkifyStr( Global.htmlDecode( currentItem.body ), {\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\tnl2br: true,\n\t\t\t\t\t\t\tclassName: 'linkified'\n\t\t\t\t\t\t} ) );\n\t\t\t\t\t\tedit_view_ui_dic['body'].setResizeEvent();\n\n\t\t\t\t\t\tvar cloneMessageControl = $( edit_view_tab.find( '#tab_request' ).find( '.edit-view-tab' ).find( '.embedded-message-template' ) ).clone();\n\t\t\t\t\t\tcloneMessageControl.removeClass( 'embedded-message-template' );\n\t\t\t\t\t\tcloneMessageControl.addClass( 'embedded-message-container' );\n\t\t\t\t\t\tcloneMessageControl.css( 'display', 'block' );\n\t\t\t\t\t\tcloneMessageControl.css( 'margin', '0px' );\n\t\t\t\t\t\tcloneMessageControl.appendTo( container );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( read_ids.length > 0 ) {\n\t\t\t\t\t\t$this.message_control_api['markRecipientMessageAsRead']( read_ids, {\n\t\t\t\t\t\t\tonResult: function( res ) {\n\t\t\t\t\t\t\t\t//commented out as it is needed on the message screen, but not here and results in a big api call we'd rather avoid.\n\t\t\t\t\t\t\t\t//$this.search( false );\n\t\t\t\t\t\t\t\t//Update message badge counts so we do not have a mismatch in badge counts such as when opening a request.\n\t\t\t\t\t\t\t\t$this.event_bus.emit( 'tt_topbar', 'profile_pending_counts', {\n\t\t\t\t\t\t\t\t\tobject_types: [ 'notification', 'message' ]\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\t$( edit_view_tab.find( '#tab_request' ).find( '.edit-view-tab' ).find( '.embedded-message-column' ) ).hide();\n\t\t\t\t\tedit_view_tab.find( '#tab_request' ).find( '.edit-view-tab' ).find( '.embedded-message-container' ).hide();\n\t\t\t\t\tedit_view_tab.find( '#tab_request' ).find( '.edit-view-tab' ).find( '.embedded-message-container' ).remove();\n\t\t\t\t\tedit_view_tab.find( '#tab_request' ).find( '.edit-view-tab' ).append( container.html() );\n\t\t\t\t} else {\n\t\t\t\t\t$( edit_view.find( '.separate' ) ).css( 'display', 'none' );\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Requires a full width column with the class embedded-message-template\n\t *\n\t * @param view_object\n\t * @param tab_object\n\t */\n\tinitUI: function( view_object, tab_object ) {\n\n\t\tvar separate_box = tab_object.find( '.separate' ).css( 'display', 'none' );\n\n\t\t// Messages title bar\n\t\tvar form_item_input = Global.loadWidgetByName( FormItemType.SEPARATED_BOX );\n\t\tform_item_input.SeparatedBox( { label: $.i18n._( 'Messages' ) } );\n\t\tview_object.addEditFieldToColumn( null, form_item_input, separate_box );\n\n\t\tvar column = tab_object.find( '.embedded-message-template' );\n\n\t\t// From\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'from', selected_able: true } );\n\t\tview_object.addEditFieldToColumn( $.i18n._( 'From' ), form_item_input, column, '' );\n\n\t\t// Subject\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'subject', selected_able: true } );\n\t\tview_object.addEditFieldToColumn( $.i18n._( 'Subject' ), form_item_input, column );\n\n\t\t// Body\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'body', width: 600, height: 400, selected_able: true } );\n\t\tview_object.addEditFieldToColumn( $.i18n._( 'Body' ), form_item_input, column, '', null, null, true );\n\n\t\t// Tab 0 second column end\n\t\tview_object.edit_view_tabs[0].push( column );\n\t\tcolumn.css( 'display', 'none' );\n\t\treturn;\n\t},\n\n\t/**\n\t * The record array must be an array containing a single record\n\t * The callback function must take the result object as an argument\n\t *\n\t * @param record_array\n\t * @param ignoreWarning\n\t * @param callback\n\t */\n\treply: function( record_array, ignoreWarning, callback ) {\n\t\tthis.message_control_api['setMessageControl']( record_array, false, ignoreWarning, {\n\t\t\tonResult: function( result ) {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback( result );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};"],"names":["EmbeddedMessage","item_id","object_type","view_object","edit_view","edit_view_tab","edit_view_ui_dic","callback","args","read_ids","$this","res","data","$","container","key","currentItem","from","linkifyStr","cloneMessageControl","tab_object","separate_box","form_item_input","column","record_array","ignoreWarning","result"],"mappings":"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"}