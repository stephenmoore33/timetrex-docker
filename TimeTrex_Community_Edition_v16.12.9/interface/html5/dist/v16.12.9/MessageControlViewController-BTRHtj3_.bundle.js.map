{"version":3,"file":"MessageControlViewController-BTRHtj3_.bundle.js","sources":["../../views/my_account/message_control/MessageControlViewController.js"],"sourcesContent":["import linkifyStr from 'linkify-string';\n\nexport class MessageControlViewController extends BaseViewController {\n\tconstructor( options = {} ) {\n\t\t_.defaults( options, {\n\t\t\tel: '#message_control_view_container',\n\n\t\t\tobject_type_array: null,\n\n\t\t\tis_request: false,\n\t\t\tis_message: false,\n\n\t\t\tmessages: null,\n\t\t\trequest_api: null,\n\n\t\t\tfolder_id: null,\n\n\t\t\tnavigation_source_data: null,\n\n\t\t\tisReloadViewUI: false,\n\n\t\t\tcurrent_select_message_control_data: null, //current select message control data, set in onViewClick\n\n\t\t} );\n\n\t\tsuper( options );\n\t}\n\n\tinit( options ) {\n\t\t//this._super('initialize', options );\n\t\tthis.edit_view_tpl = 'MessageControlEditView.html';\n\t\tthis.permission_id = 'message';\n\t\tthis.viewId = 'MessageControl';\n\t\tthis.script_name = 'MessageControlView';\n\t\tthis.table_name_key = 'message_control';\n\t\tthis.context_menu_name = $.i18n._( 'Message' );\n\t\tthis.api = TTAPI.APIMessageControl;\n\t\tthis.request_api = TTAPI.APIRequest;\n\t\tthis.folder_id = 10;\n\t\tthis.event_bus = new TTEventBus({ view_id: this.viewId });\n\n\t\tthis.render();\n\t\tthis.buildContextMenu();\n\n\t\tthis.initData();\n\t}\n\n\tinitOptions() {\n\t\tvar $this = this;\n\n\t\tthis.initDropDownOption( 'object_type' );\n\t}\n\n\tbuildSearchFields() {\n\n\t\tsuper.buildSearchFields();\n\n\t\tvar default_args = {};\n\t\tdefault_args.permission_section = 'message';\n\t\tthis.search_fields = [\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Employee' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'user_id',\n\t\t\t\tdefault_args: default_args,\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Type' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tmultiple: true,\n\t\t\t\tfield: 'object_type_id',\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tlayout_name: 'global_option_column',\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Subject' ),\n\t\t\t\tin_column: 1,\n\t\t\t\tfield: 'subject',\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.TEXT_INPUT\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Created By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'created_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} ),\n\n\t\t\tnew SearchField( {\n\t\t\t\tlabel: $.i18n._( 'Updated By' ),\n\t\t\t\tin_column: 2,\n\t\t\t\tfield: 'updated_by',\n\t\t\t\tlayout_name: 'global_user',\n\t\t\t\tapi_class: TTAPI.APIUser,\n\t\t\t\tmultiple: true,\n\t\t\t\tbasic_search: true,\n\t\t\t\tadv_search: false,\n\t\t\t\tform_item_type: FormItemType.AWESOME_BOX\n\t\t\t} )\n\t\t];\n\t}\n\n\tgetSubViewFilter( filter ) {\n\n\t\tif ( filter.length === 0 ) {\n\t\t\tfilter = {};\n\t\t}\n\n\t\tfilter['folder_id'] = this.folder_id;\n\n\t\treturn filter;\n\t}\n\n\tgetCustomContextMenuModel() {\n\t\tvar context_menu_model = {\n\t\t\texclude: ['default'],\n\t\t\tinclude: [\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'New' ),\n\t\t\t\t\tid: 'add',\n\t\t\t\t\tvue_icon: 'tticon tticon-add_black_24dp'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'View' ),\n\t\t\t\t\tid: 'view',\n\t\t\t\t\tvue_icon: 'tticon tticon-visibility_black_24dp',\n\t\t\t\t\tshow_on_right_click: true,\n\t\t\t\t\tsort_order: 1010\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Reply' ),\n\t\t\t\t\tid: 'edit',\n\t\t\t\t\tvue_icon: 'tticon tticon-reply_black_24dp'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Delete' ),\n\t\t\t\t\tid: 'delete_icon',\n\t\t\t\t\taction_group: 'delete',\n\t\t\t\t\tvue_icon: 'tticon tticon-delete_black_24dp'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Delete & Next' ),\n\t\t\t\t\tid: 'delete_and_next',\n\t\t\t\t\taction_group: 'delete',\n\t\t\t\t\tvue_icon: 'tticon tticon-delete_black_24dp'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Send' ),\n\t\t\t\t\tid: 'send',\n\t\t\t\t\tvue_icon: 'tticon tticon-send_black_24dp'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Cancel' ),\n\t\t\t\t\tid: 'cancel',\n\t\t\t\t\tpermission_result: true,\n\t\t\t\t\tpermission: null,\n\t\t\t\t\tsort_order: 1990\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Folder: Inbox' ),\n\t\t\t\t\tid: 'inbox',\n\t\t\t\t\taction_group: 'message_type',\n\t\t\t\t\tmulti_select_group: 1,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tpermission_result: true,\n\t\t\t\t\tpermission: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Folder: Sent' ),\n\t\t\t\t\tid: 'sent',\n\t\t\t\t\taction_group: 'message_type',\n\t\t\t\t\tmulti_select_group: 1,\n\t\t\t\t\tselected: false,\n\t\t\t\t\tpermission_result: true,\n\t\t\t\t\tpermission: null\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: $.i18n._( 'Export' ),\n\t\t\t\t\tid: 'export_excel',\n\t\t\t\t\tvue_icon: 'tticon tticon-file_upload_black_24dp',\n\t\t\t\t\tmenu_align: 'right',\n\t\t\t\t\tpermission_result: true,\n\t\t\t\t\tpermission: null,\n\t\t\t\t\tsort_order: 9000\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\treturn context_menu_model;\n\t}\n\n\tsetCustomDefaultMenuIcon( id, context_btn, grid_selected_length ) {\n\t\tswitch ( id ) {\n\t\t\tcase 'close_misc':\n\t\t\t\tthis.setDefaultMenuCloseMiscIcon( context_btn, grid_selected_length );\n\t\t\t\tbreak;\n\t\t\tcase 'send':\n\t\t\t\tthis.setDefaultMenuSendIcon( context_btn, grid_selected_length );\n\t\t\t\tbreak;\n\t\t\tcase 'cancel':\n\t\t\t\tthis.setDefaultMenuCancelIcon( context_btn, grid_selected_length );\n\t\t\t\tbreak;\n\t\t\tcase 'inbox':\n\t\t\t\tif ( this.folder_id === 10  ) {\n\t\t\t\t\tthis.setCurrentSelectedIcon( context_btn );\n\t\t\t\t}\n\t\t\t\tthis.setDefaultMenuInboxIcon( context_btn, grid_selected_length );\n\t\t\t\tbreak;\n\t\t\tcase 'sent':\n\t\t\t\tif ( this.folder_id === 20  ) {\n\t\t\t\t\tthis.setCurrentSelectedIcon( context_btn );\n\t\t\t\t}\n\t\t\t\tthis.setDefaultMenuSentIcon( context_btn, grid_selected_length );\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonGridDblClickRow() {\n\n\t\tvar context_menu_array = ContextMenuManager.getMenuModelByMenuId( this.determineContextMenuMountAttributes().id );\n\t\tvar len = context_menu_array.length;\n\n\t\tvar need_break = false;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\n\t\t\tif ( need_break ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet context_btn = context_menu_array[i];\n\t\t\tlet id = context_menu_array[i].id;\n\n\t\t\tswitch ( id ) {\n\t\t\t\tcase 'view':\n\t\t\t\t\tneed_break = true;\n\t\t\t\t\tif ( context_btn.visible && !context_btn.disabled ) {\n\t\t\t\t\t\tProgressBar.showOverlay();\n\t\t\t\t\t\tthis.onViewClick();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tonCustomContextClick( id, context_btn ) {\n\t\t// Vue notes: Normally when Vue calls this menu, it does not need context_btn, as most places that use this function have the Global.isSet( menu_name ) check to just use menu_name as the id. However, MessageControlVC does use it, via setCurrentSelectedIcon\n\t\tif ( !context_btn ) {\n\t\t\tcontext_btn = ContextMenuManager.getMenuModelByMenuId( this.determineContextMenuMountAttributes().id ).find( icon => icon.id == id );\n\t\t}\n\n\t\tswitch ( id ) {\n\t\t\tcase 'send':\n\t\t\t\tthis.onSaveClick();\n\t\t\t\tbreak;\n\t\t\tcase 'close_misc':\n\t\t\tcase 'cancel':\n\t\t\t\tthis.onCancelClick( id );\n\t\t\t\tbreak;\n\t\t\tcase 'inbox':\n\t\t\t\tthis.setCurrentSelectedIcon( context_btn );\n\t\t\t\tthis.onInboxClick();\n\t\t\t\tbreak;\n\t\t\tcase 'sent':\n\t\t\t\tthis.setCurrentSelectedIcon( context_btn );\n\t\t\t\tthis.onSentClick();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonCancelClick( iconName ) {\n\t\tvar $this = this;\n\t\tLocalCacheData.current_doing_context_action = 'cancel';\n\n\t\tif ( this.is_changed ) {\n\t\t\tTAlertManager.showConfirmAlert( Global.modify_alert_message, null, function( flag ) {\n\n\t\t\t\tif ( flag === true ) {\n\t\t\t\t\tdoNext();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t} else {\n\t\t\tdoNext();\n\t\t}\n\n\t\tfunction doNext() {\n\n\t\t\tif ( iconName === 'cancel' && $this.isReloadViewUI ) {\n\t\t\t\t$this.isReloadViewUI = false;\n//\t\t\t\t //set to fix that IndexViewConroler force ui back to view when open view again\n\t\t\t\tContextMenuManager.unmountContextMenu( $this.determineContextMenuMountAttributes().id );\n\t\t\t\t$this.onViewClick( $this.current_select_message_control_data );\n\t\t\t} else {\n\t\t\t\t$this.removeEditView();\n\t\t\t\t$this.isReloadViewUI = false;\n\t\t\t}\n\n\t\t\tGlobal.setUIInitComplete();\n\t\t\tProgressBar.closeOverlay();\n\n\t\t\tTTPromise.resolve( 'base', 'onCancelClick' );\n\n\t\t}\n\t}\n\n\tonSaveResult( result ) {\n\t\tvar $this = this;\n\t\tif ( result && result.isValid() ) {\n\t\t\tvar result_data = result.getResult();\n\t\t\tif ( !this.edit_only_mode ) {\n\t\t\t\tif ( result_data === true ) {\n\t\t\t\t\t$this.refresh_id = $this.current_edit_record.id;\n\t\t\t\t} else if ( TTUUID.isUUID( result_data ) && result_data != TTUUID.zero_id && result_data != TTUUID.not_exist_id ) {\n\t\t\t\t\t$this.refresh_id = result_data;\n\t\t\t\t}\n\n\t\t\t\t$this.search( false );\n\t\t\t}\n\n\t\t\t$this.onSaveDone( result );\n\n\t\t\tif ( $this.isReloadViewUI ) {\n\t\t\t\t$this.isReloadViewUI = false;\n\t\t\t\t$this.removeEditView();\n\t\t\t\t$this.onViewClick( $this.current_select_message_control_data );\n\n\t\t\t} else {\n\t\t\t\t$this.removeEditView();\n\t\t\t}\n\n\t\t\t$().TFeedback( {\n\t\t\t\tsource: 'Save'\n\t\t\t} );\n\n\t\t} else {\n\t\t\t$this.setErrorMenu();\n\t\t\t$this.setErrorTips( result );\n\n\t\t}\n\t}\n\n\tonInboxClick() {\n\t\tthis.folder_id = 10;\n\t\tthis.search();\n\t}\n\n\tonSentClick() {\n\t\tthis.folder_id = 20;\n\t\tthis.search();\n\t}\n\n\tsetCustomEditMenuIcon( id, context_btn ) {\n\t\tswitch ( id ) {\n\t\t\tcase 'close_misc':\n\t\t\t\tthis.setEditMenuCloseMiscIcon( context_btn );\n\t\t\t\tbreak;\n\t\t\tcase 'send':\n\t\t\t\tthis.setEditMenuSendIcon( context_btn );\n\t\t\t\tbreak;\n\t\t\tcase 'inbox':\n\t\t\t\tthis.setEditMenuInboxIcon( context_btn );\n\t\t\t\tbreak;\n\t\t\tcase 'sent':\n\t\t\t\tthis.setEditMenuSentIcon( context_btn );\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetIsPunchOrRequest() {\n\t\tlet p_id = null;\n\t\tif ( this.is_message ) {\n\t\t\tp_id = 'message';\n\t\t} else if ( this.is_request ) {\n\t\t\tp_id = 'request';\n\t\t}\n\n\t\treturn p_id;\n\t}\n\n\tsetCurrentSelectedIcon( icon ) {\n\n\t\tvar context_menu_array = ContextMenuManager.getMenuModelByMenuId( this.determineContextMenuMountAttributes().id );\n\t\t//Error: Uncaught TypeError: Cannot read property 'find' of null in /interface/html5/#!m=MessageControl line 543\n\t\tif ( !icon ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar len = context_menu_array.length;\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tlet context_btn = context_menu_array[i];\n\t\t\tlet id = context_menu_array[i].id;\n\n\t\t\tif( context_btn.active ) {\n\t\t\t\t// Make sure to only set the relevant group icons inactive, otherwise the other context menu icons get active/inactive toggle icons set on them too.\n\t\t\t\tContextMenuManager.activateMenuItem( this.determineContextMenuMountAttributes().id, context_btn\t.id, true );\n\t\t\t}\n\t\t}\n\t\tContextMenuManager.activateMenuItem( this.determineContextMenuMountAttributes().id, icon.id, false );\n\t}\n\n\tsetDefaultMenuDeleteAndNextIcon( context_btn, grid_selected_length ) {\n\n\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t}\n\n\tsetDefaultMenuDeleteIcon( context_btn, grid_selected_length ) {\n\n\t\tif ( grid_selected_length >= 1 ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetDefaultMenuEditIcon( context_btn, grid_selected_length ) {\n\n\t\tif ( this.is_edit || this.is_viewing ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\n\t\tif ( grid_selected_length === 1 ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetDefaultMenuViewIcon( context_btn, grid_selected_length ) {\n\n\t\tif ( grid_selected_length === 1 ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetDefaultMenuAddIcon( context_btn, grid_selected_length ) {\n\t}\n\n\tsetEditMenuCloseMiscIcon( context_btn ) {\n\t}\n\n\tsetEditMenuSendIcon( context_btn ) {\n\n\t\tif ( this.is_edit || this.is_add ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetEditMenuInboxIcon( context_btn ) {\n\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t}\n\n\tsetEditMenuSentIcon( context_btn ) {\n\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t}\n\n\tsetDefaultMenuCloseMiscIcon( context_btn, grid_selected_length ) {\n\n\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t}\n\n\tsetDefaultMenuSendIcon( context_btn, grid_selected_length ) {\n\t\tif ( this.is_edit || this.is_viewing ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t} else {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\n\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t}\n\n\tsetDefaultMenuInboxIcon( context_btn, grid_selected_length ) {\n\t}\n\n\tsetDefaultMenuSentIcon( context_btn, grid_selected_length ) {\n\t}\n\n\tsetGridCellBackGround() {\n\t\t//Error: Unable to get property 'getGridParam' of undefined or null reference\n\t\tif ( !this.grid ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar data = this.grid.getGridParam( 'data' );\n\n\t\t//Error: TypeError: data is undefined in /interface/html5/framework/jquery.min.js?v=7.4.6-20141027-074127 line 2 > eval line 70\n\t\tif ( !data ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar len = data.length;\n\n\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\tvar item = data[i];\n\n\t\t\tif ( item.status_id == 10 ) {\n\t\t\t\t$( 'tr[id=\\'' + item.id + '\\'] td' ).css( 'font-weight', 'bold' );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFilterColumnsFromDisplayColumns() {\n\t\tvar column_filter = {};\n\n\t\tcolumn_filter.id = true;\n\t\tcolumn_filter.is_child = true;\n\t\tcolumn_filter.is_owner = true;\n\t\tcolumn_filter.object_type_id = true;\n\t\tcolumn_filter.object_id = true;\n\t\tcolumn_filter.status_id = true;\n\t\tcolumn_filter.from_user_id = true;\n\t\tcolumn_filter.to_user_id = true;\n\n\t\t// Error: Unable to get property 'getGridParam' of undefined or null reference\n\t\tvar display_columns = [];\n\t\tif ( this.grid ) {\n\t\t\tdisplay_columns = this.grid.getGridParam( 'colModel' );\n\t\t}\n\n\t\tif ( display_columns ) {\n\t\t\tvar len = display_columns.length;\n\n\t\t\tfor ( var i = 0; i < len; i++ ) {\n\t\t\t\tvar column_info = display_columns[i];\n\t\t\t\tcolumn_filter[column_info.name] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn column_filter;\n\t}\n\n\tinitEditViewUI( view_id, edit_view_file_name ) {\n\n\t\tvar $this = this;\n\n\t\tif ( this.edit_view ) {\n\t\t\tthis.edit_view.remove();\n\t\t}\n\t\tthis.edit_view = $( Global.loadViewSource( view_id, edit_view_file_name, null, true ) );\n\t\tthis.edit_view_tab = $( this.edit_view.find( '.edit-view-tab-bar' ) );\n\t\t//Give edt view tab a id, so we can load it when put right click menu on it\n\t\tthis.edit_view_tab.attr( 'id', this.ui_id + '_edit_view_tab' );\n\t\t// Moved into generic BaseView.initEditViewTabs\n\t\t// this.setTabOVisibility( false );\n\t\t// this.edit_view_tab = this.edit_view_tab.tabs( {\n\t\t// \tactivate: function( e, ui ) {\n\t\t// \t\t$this.onTabShow( e, ui );\n\t\t// \t}\n\t\t// } );\n\n\t\t// this.edit_view_tab.bind( 'tabsselect', function( e, ui ) {\n\t\t// \t$this.onTabIndexChange( e, ui );\n\t\t// } );\n\n\t\tif ( this.folder_id == 10 ) {\n\t\t\tthis.navigation_label = $.i18n._( 'From' );\n\t\t} else if ( this.folder_id == 20 ) {\n\t\t\tthis.navigation_label = $.i18n._( 'To' );\n\t\t}\n\n\t\tContextMenuManager.unmountContextMenu( this.determineContextMenuMountAttributes().id );\n\n\t\tGlobal.contentContainer().append( this.edit_view );\n\n\t\tthis.initRightClickMenu( RightClickMenuType.EDITVIEW );\n\n\t\tthis.buildEditViewUI();\n\t\tthis.setEditViewTabHeight();\n\t}\n\n\tinitEditViewTabs() {\n\t\tvar $this = this;\n\t\tvar tab_options = {\n\t\t\tactivate: function( e, ui ) {\n\t\t\t\t$this.onTabShow( e, ui );\n\t\t\t}\n\t\t};\n\n\t\tsuper.initEditViewTabs( tab_options );\n\t}\n\n\tgetViewSelectedRecordId( record ) {\n\t\t// overriden from BaseVC due to the this.getRecordFromGridById call\n\t\tvar selected_item;\n\t\tvar selected_id;\n\t\tvar grid_selected_id_array = this.getGridSelectIdArray();\n\t\tvar grid_selected_length = grid_selected_id_array.length;\n\n\t\tif ( Global.isSet( record ) ) {\n\t\t\tselected_item = record; // If the next_selected_item is defined, first to use this variable.\n\n\t\t} else if ( grid_selected_length > 0 ) {\n\t\t\tselected_item = this.getRecordFromGridById( grid_selected_id_array[0] );\n\t\t} else {\n\t\t\tTTPromise.reject( 'MessageControllViewController', 'onViewClick' );\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( selected_item.object_type_id == 50 ) {\n\t\t\tselected_id = selected_item.object_id;\n\t\t\tthis.is_request = true;\n\t\t\tthis.is_message = false;\n\t\t} else {\n\t\t\tselected_id = selected_item.id;\n\t\t\tthis.is_request = false;\n\t\t\tthis.is_message = true;\n\t\t}\n\n\t\treturn selected_item;\n\t}\n\n\tgetCurrentSelectedRecord( return_object ) {\n\t\tvar selected_item = this.current_selected_record;\n\t\tif ( !selected_item ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selected_id;\n\t\tif ( selected_item.object_type_id && selected_item.object_type_id == 50 ) {\n\t\t\tselected_id = selected_item.object_id;\n\t\t} else {\n\t\t\tselected_id = selected_item.id;\n\t\t}\n\n\t\t// current_selected_record normally handles ID's, but for MessageControlVC we will be using the record object as this is needed in various places.\n\t\tif ( return_object === true ) {\n\t\t\treturn selected_item;\n\t\t} else {\n\t\t\treturn selected_id;\n\t\t}\n\t}\n\n\thandleViewAPICallbackResult( result ) {\n\t\tvar result_data;\n\t\tif ( result && result.getResult ) {\n\t\t\tresult_data = result.getResult();\n\t\t\tif ( this.is_request ) {\n\t\t\t\tresult_data = result_data[0];\n\t\t\t} else {\n\t\t\t\t// Note that we dont want to take just the first record if its not a request. Requests (and most other onView pages, only have one record. But messages can have multiple records in the results data.\n\t\t\t\tresult_data = result_data.length > 1 ? result_data.reverse() : result_data[0];\n\t\t\t}\n\t\t} else {\n\t\t\tresult_data = result;\n\t\t}\n\n\t\treturn super.handleViewAPICallbackResult( result_data );\n\t}\n\n\tdoViewAPICall( filter ) {\n\t\tvar callback = { onResult: this.handleViewAPICallbackResult.bind( this ) };\n\n\t\tif ( this.is_request ) {\n\t\t\treturn this.request_api.getRequest( filter, callback );\n\t\t} else {\n\t\t\treturn this.api.getMessage( filter, callback );\n\t\t}\n\t}\n\n\tdoViewClickResult( result_data ) {\n\t\t// save current select grid data. Not this not work when access from url action. See autoOpenEditView function for why\n\t\tthis.current_select_message_control_data = this.getCurrentSelectedRecord( true );\n\n\t\t//if access from url, current_select_message_control_data need be get again\n\t\tif ( !this.current_select_message_control_data.hasOwnProperty( 'to_user_id' ) ) {\n\t\t\tvar filter = { filter_data: { id: this.current_select_message_control_data.id } };\n\t\t\tvar message_control_data = this.api.getMessageControl( filter, { async: false } ).getResult()[0];\n\n\t\t\tif ( message_control_data ) {\n\t\t\t\tthis.current_select_message_control_data = message_control_data;\n\t\t\t}\n\n\t\t}\n\t\tvar retval = super.doViewClickResult( result_data );\n\t\tTTPromise.resolve( 'MessageControllViewController', 'onViewClick' );\n\t\t// The promise must be resolved last, after everthing else, hence the specific order here with retval and the super.\n\t\treturn retval;\n\t}\n\n\tgetAPIFilters() {\n\t\tvar record_id = this.getCurrentSelectedRecord();\n\t\tvar filter = {};\n\n\t\tfilter.filter_data = {};\n\t\tfilter.filter_data.id = record_id;\n\n\t\treturn filter;\n\t}\n\n\tonViewClick( next_selected_item, noRefreshUI ) {\n\t\tTTPromise.add( 'MessageControllViewController', 'onViewClick' );\n\t\tTTPromise.wait();\n\t\tvar $this = this;\n\n\t\tthis.setCurrentEditViewState( 'view' );\n\n\t\t$this.isReloadViewUI = true;\n\n\t\tvar selected_item = this.getViewSelectedRecordId( next_selected_item );\n\t\tif ( Global.isFalseOrNull( selected_item ) ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setCurrentSelectedRecord( selected_item );\n\n\t\tvar filter = this.getAPIFilters();\n\t\tthis.openEditView();\n\n\t\treturn this.doViewAPICall( filter );\n\t}\n\n\t/* jshint ignore:start */\n\tsetURL() {\n\n\t\tif ( LocalCacheData.current_doing_context_action === 'edit' ) {\n\t\t\tLocalCacheData.current_doing_context_action = '';\n\t\t\treturn;\n\t\t}\n\n\t\tvar a = '';\n\t\tswitch ( LocalCacheData.current_doing_context_action ) {\n\t\t\tcase 'new':\n\t\t\tcase 'edit':\n\t\t\tcase 'view':\n\t\t\t\ta = LocalCacheData.current_doing_context_action;\n\t\t\t\tbreak;\n\t\t\tcase 'copy_as_new':\n\t\t\t\ta = 'new';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ( this.canSetURL() ) {\n\t\t\tvar tab_name = this.edit_view_tab ? this.edit_view_tab.find( '.edit-view-tab-bar-label' ).children().eq( this.getEditViewTabIndex() ).text() : '';\n\t\t\ttab_name = tab_name.replace( /\\/|\\s+/g, '' );\n\t\t\tif ( this.current_select_message_control_data && this.current_select_message_control_data.id ) {\n\t\t\t\tif ( a ) {\n\n\t\t\t\t\tif ( this.is_request ) {\n\t\t\t\t\t\tGlobal.setURLToBrowser( Global.getBaseURL() + '#!m=' + this.viewId +\n\t\t\t\t\t\t\t'&a=' + a + '&id=' + this.current_select_message_control_data.id +\n\t\t\t\t\t\t\t'&t=request&object_id=' + this.current_select_message_control_data.object_id +\n\t\t\t\t\t\t\t'&tab=' + tab_name );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tGlobal.setURLToBrowser( Global.getBaseURL() +\n\t\t\t\t\t\t\t'#!m=' + this.viewId + '&a=' +\n\t\t\t\t\t\t\ta + '&id=' + this.current_select_message_control_data.id + '&t=message' +\n\t\t\t\t\t\t\t'&tab=' + tab_name );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tGlobal.trackView();\n\n\t\t\t} else {\n\t\t\t\tif ( a ) {\n\t\t\t\t\t//Edit a record which don't have id, schedule view Recurring Scedule\n\t\t\t\t\tif ( a === 'edit' ) {\n\t\t\t\t\t\tGlobal.setURLToBrowser( Global.getBaseURL() + '#!m=' + this.viewId + '&a=new&t=' + ( this.is_request ? 'request' : 'message' ) +\n\t\t\t\t\t\t\t'&tab=' + tab_name );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tGlobal.setURLToBrowser( Global.getBaseURL() + '#!m=' + this.viewId + '&a=' + a + '&t=' + ( this.is_request ? 'request' : 'message' ) +\n\t\t\t\t\t\t\t'&tab=' + tab_name );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tGlobal.setURLToBrowser( Global.getBaseURL() + '#!m=' + this.viewId );\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/* jshint ignore:end */\n\tinitEditViewData() {\n\t\tvar $this = this;\n\t\tif ( !this.edit_only_mode && this.navigation ) {\n\n\t\t\tvar grid_current_page_items = this.grid.getGridParam( 'data' );\n\n\t\t\tvar navigation_div = this.edit_view.find( '.navigation-div' );\n\t\t\tvar navigation_source_data;\n\n\t\t\t//because I will always get this in onViewClick, so else branch should never be in\n\t\t\tif ( this.current_select_message_control_data && this.current_select_message_control_data.hasOwnProperty( 'id' ) &&\n\t\t\t\tthis.current_select_message_control_data.hasOwnProperty( 'subject' ) ) {\n\t\t\t\tnavigation_source_data = this.current_select_message_control_data;\n\t\t\t} else {\n\t\t\t\tnavigation_source_data = Global.isArray( this.current_edit_record ) ? this.current_edit_record[0] : this.current_edit_record;\n\t\t\t}\n\n\t\t\tthis.navigation_source_data = navigation_source_data;\n\n\t\t\tif ( this.is_viewing && Global.isSet( navigation_source_data.id ) && navigation_source_data.id ) {\n\t\t\t\tnavigation_div.css( 'display', 'block' );\n\t\t\t\t//Set Navigation Awesomebox\n\n\t\t\t\t//init navigation only when open edit view\n\t\t\t\tif ( !this.navigation.getSourceData() ) {\n\t\t\t\t\tthis.navigation.setSourceData( grid_current_page_items );\n\t\t\t\t\tthis.navigation.setRowPerPage( LocalCacheData.getLoginUserPreference().items_per_page );\n\t\t\t\t\tthis.navigation.setPagerData( this.pager_data );\n\n//\t\t\t\t\tthis.navigation.setDisPlayColumns( this.buildDisplayColumnsByColumnModel( this.grid.getGridParam( 'colModel' ) ) );\n\n\t\t\t\t\tvar default_args = {};\n\t\t\t\t\tdefault_args.filter_data = Global.convertLayoutFilterToAPIFilter( this.select_layout );\n\t\t\t\t\tdefault_args.filter_sort = this.select_layout.data.filter_sort;\n\t\t\t\t\tthis.navigation.setDefaultArgs( default_args );\n\t\t\t\t}\n\n\t\t\t\tthis.navigation.setValue( navigation_source_data );\n\n\t\t\t} else {\n\t\t\t\tnavigation_div.css( 'display', 'none' );\n\t\t\t}\n\t\t}\n\n\t\tthis.setUIWidgetFieldsToCurrentEditRecord();\n\n\t\tthis.setNavigationArrowsEnabled();\n\n\t\t// Create this function alone because of the column value of view is different from each other, some columns need to be handle specially. and easily to rewrite this function in sub-class.\n\n\t\tthis.setCurrentEditRecordData();\n\n\t\t//Init *Please save this record before modifying any related data* box\n\t\tthis.edit_view.find( '.save-and-continue-div' ).SaveAndContinueBox( { related_view_controller: this } );\n\t\tthis.edit_view.find( '.save-and-continue-div' ).css( 'display', 'none' );\n\t}\n\n\tsetNavigation() {\n\n\t\tvar $this = this;\n\n\t\tthis.navigation.setPossibleDisplayColumns( this.buildDisplayColumnsByColumnModel( this.grid.getGridParam( 'colModel' ) ),\n\t\t\tthis.buildDisplayColumns( this.default_display_columns ) );\n\n\t\tthis.navigation.unbind( 'formItemChange' ).bind( 'formItemChange', function( e, target ) {\n\n\t\t\tvar key = target.getField();\n\t\t\tvar next_select_item = target.getValue( true );\n\n\t\t\tif ( !next_select_item ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( next_select_item.id !== $this.navigation_source_data.id ) {\n\t\t\t\tProgressBar.showOverlay();\n\n\t\t\t\tif ( $this.is_viewing ) {\n\t\t\t\t\t$this.onViewClick( next_select_item ); //Dont refresh UI\n\t\t\t\t} else {\n\t\t\t\t\t$this.onEditClick( next_select_item ); //Dont refresh UI\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$this.setNavigationArrowsEnabled();\n\n\t\t} );\n\t}\n\n\tonEditClick( editId, noRefreshUI ) {\n\t\t// edit click is clicking on Reply\n\t\tthis.setCurrentEditViewState( 'edit' );\n\t\tthis.is_request = false;\n\t\tthis.is_message = false;\n\n\t\tvar grid_selected_id_array = this.getGridSelectIdArray();\n\t\tvar selected_item = {};\n\n\t\tif ( this.edit_view ) {\n\t\t\tselected_item = this.current_select_message_control_data;\n\t\t} else { // click Reply on list view.\n\t\t\tselected_item = this.getRecordFromGridById( grid_selected_id_array[0] );\n\t\t}\n\n\t\tthis.current_edit_record = selected_item;\n\t\tthis.initEditViewUI( this.viewId, this.edit_view_tpl );\n\t\tthis.initEditView();\n\t}\n\n\tbuildEditViewUI() {\n\t\t// Builds the fields for Add and Edit, and partially for Requests. But fields for Messages and some of requests are done dynamically in setMessages (Both) and initEmbeddedMessageData (Request only)\n\n\t\tvar pager_data = this.navigation && this.navigation.getPagerData && this.navigation.getPagerData();\n\t\tvar source_data = this.navigation && this.navigation.getSourceData && this.navigation.getSourceData();\n\t\tsuper.buildEditViewUI();\n\t\tvar $this = this;\n\n\t\t// This is actually updated in switchMessageOrRequestWidgets depending on view type\n\t\tvar tab_model = {\n\t\t\t'tab_message': {\n\t\t\t\t'label': $.i18n._( 'Message' )\n\t\t\t}\n\t\t};\n\t\tthis.setTabModel( tab_model );\n\n\t\tif ( !this.edit_only_mode ) {\n\t\t\tthis.navigation.AComboBox( {\n\t\t\t\tapi_class: TTAPI.APIMessageControl,\n\t\t\t\tid: this.script_name + '_navigation',\n\t\t\t\tallow_multiple_selection: false,\n\t\t\t\tlayout_name: 'global_message_user',\n\t\t\t\tnavigation_mode: true,\n\t\t\t\tshow_search_inputs: true\n\t\t\t} );\n\t\t\tthis.setNavigation();\n\t\t}\n\n\t\tif ( pager_data && source_data ) {\n\t\t\tthis.navigation.setSourceData( source_data );\n\t\t\tthis.navigation.setPagerData( pager_data );\n\t\t}\n\n\t\t//Tab 0 start\n\n\t\tvar form_item_input;\n\n\t\tvar tab_message = this.edit_view_tab.find( '#tab_message' );\n\n\t\tvar tab_message_column1 = tab_message.find( '.first-column' );\n\n\t\tvar tab_message_column2 = tab_message.find( '.second-column' );\n\n\t\tthis.edit_view_tabs[0] = [];\n\n\t\tthis.edit_view_tabs[0].push( tab_message_column1 );\n\t\tthis.edit_view_tabs[0].push( tab_message_column2 );\n\t\ttab_message_column2.css( 'display', 'none' );\n\n\t\t// Now set the fields up\n\n\t\t// 'Message' fields\n\t\t// #2775 'Message' message threads fields now dynamically built on the fly in setMessages()\n\n\t\t// 'Request' fields\n\n\t\t// Employee\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'full_name', selected_able: true } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Employee' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// Date\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'date_stamp', selected_able: true } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Date' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// Type\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'type', selected_able: true } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Type' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// tab_message first column end\n\n\t\t// 'Request' Separated Box for 'Messages' Header\n\n\t\tvar separated_box = tab_message.find( '.separate' );\n\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.SEPARATED_BOX );\n\t\tform_item_input.SeparatedBox( { label: $.i18n._( 'Messages' ) } );\n\t\tthis.addEditFieldToColumn( null, form_item_input, separated_box, '', null, true, null, 'separated_box' );\n\n\t\t// #2775 Request message thread fields now generated by initEmbeddedMessageData() and setMessages()\n\n\t\t// Tab 0 second column end\n\n\t\t// 'New (add)' and 'Reply (edit)' fields\n\n\t\t// Employee - 'New' view\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.AWESOME_BOX );\n\t\tform_item_input.AComboBox( {\n\t\t\tapi_class: TTAPI.APIMessageControl,\n\t\t\tcolumn_option_key: 'user_columns',\n\t\t\tallow_multiple_selection: true,\n\t\t\tlayout_name: 'global_message_user',\n\t\t\tshow_search_inputs: true,\n\t\t\tset_empty: true,\n\t\t\tcustom_key_name: 'User',\n\t\t\tfield: 'to_user_id'\n\t\t} );\n\t\tvar default_args = {};\n\t\tdefault_args.permission_section = 'message';\n\t\tform_item_input.setDefaultArgs( default_args );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Employee(s)' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// Employee(s) - 'Reply' view\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: 'from_full_name' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Employee(s)' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// Subject - shared with the new/add & reply/edit view\n\t\t// Dev Note, in old reply view code, the width was passed as 359. Should that be incorporated here?\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_INPUT );\n\t\tform_item_input.TTextInput( { field: 'subject' } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Subject' ), form_item_input, tab_message_column1, '', null, true );\n\n\t\t// Body  - shared with the new/add & reply/edit view\n\t\tform_item_input = Global.loadWidgetByName( FormItemType.TEXT_AREA );\n\t\tform_item_input.TTextArea( { field: 'body', width: 600, height: 400 } );\n\t\tthis.addEditFieldToColumn( $.i18n._( 'Body' ), form_item_input, tab_message_column1, '', null, true, true );\n\t}\n\n\tsetEditViewWidgetsMode() {\n\t\tthis.switchMessageOrRequestWidgets();\n\t\tsuper.setEditViewWidgetsMode();\n\t}\n\n\tswitchMessageOrRequestWidgets() {\n\t\t// UI field building is done from buildEditViewUI(), and setMessages() for Messages and Requests (Also initEmbeddedMessageData).\n\t\t// This function shows/hides various fields depending on whether the view is displaying a message or request, to reduce re-building the form elements, instead simply hiding and showing the right ones.\n\t\tvar tab_label;\n\n\t\t// Detach all fields, further down we just attach the ones we need for the view\n\t\tfor ( var key in this.edit_view_ui_dic ) {\n\t\t\tif ( !this.edit_view_ui_dic.hasOwnProperty( key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.detachElement( key );\n\t\t}\n\n\t\t// Detach the Request Messages header label box and hide parent container\n\t\tthis.detachElement( 'separated_box' );\n\n\t\t// Remove message list for both Message type and Request type - Message UI fields do not detach, we just remove them, as they are dynamically built on the fly.\n\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .second-column.message-container' ).remove();\n\n\t\tif ( this.is_request ) {\n\t\t\ttab_label = 'Request';\n\t\t\tthis.attachElement( 'full_name' );\n\t\t\tthis.attachElement( 'date_stamp' );\n\t\t\tthis.attachElement( 'type' );\n\t\t\tthis.attachElement( 'separated_box' );\n\n\t\t\t// In show the main container which holds the fields.\n\t\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .first-column' ).show();\n\n\t\t} else if ( this.is_message ) {\n\t\t\ttab_label = 'Message';\n\t\t\t// #2775 No longer attaching elements here, as the Messages fields are dynamically built in setMessages\n\n\t\t\t// Hide the first-column field, as this is not used by messages, but causes a border to be shown at the top. Hiding only here rather than at the top, to reduce flashing (if any)\n\t\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .first-column' ).hide();\n\n\t\t} else if ( this.is_add ) {\n\t\t\ttab_label = 'New Message';\n\t\t\tthis.attachElement( 'to_user_id' );\n\t\t\tthis.attachElement( 'subject' );\n\t\t\tthis.attachElement( 'body' );\n\n\t\t\t// Show the main container which holds the fields.\n\t\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .first-column' ).show();\n\n\t\t} else if ( this.is_edit ) {\n\t\t\ttab_label = 'Reply';\n\t\t\tthis.attachElement( 'from_full_name' );\n\t\t\tthis.attachElement( 'subject' );\n\t\t\tthis.attachElement( 'body' );\n\n\t\t\t// Show the main container which holds the fields.\n\t\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .first-column' ).show();\n\t\t}\n\n\t\tvar tab_model = {\n\t\t\t'tab_message': { 'label': $.i18n._( tab_label ), 'is_multi_column': true }\n\t\t};\n\t\tthis.setTabModel( tab_model );\n\t}\n\n\trefreshCurrentRecord() {\n\t\tvar next_select_item = this.navigation.getItemByIndex( this.navigation.getSelectIndex() );\n\t\tProgressBar.showOverlay();\n\t\tthis.onViewClick( next_select_item ); //Dont refresh UI\n\t\tthis.setNavigationArrowsEnabled();\n\t}\n\n\tonRightOrLeftArrowClickCallBack( next_select_item ) {\n\t\tProgressBar.showOverlay();\n\t\tthis.onViewClick( next_select_item ); //Dont refresh UI\n\t\tthis.setNavigationArrowsEnabled();\n\t}\n\n\tonAddClick() {\n\n\t\tTTPromise.add( 'Message', 'add' );\n\t\tTTPromise.wait();\n\t\tvar $this = this;\n\t\tthis.is_viewing = false;\n\t\tthis.is_edit = false;\n\t\tthis.is_add = true;\n\t\tthis.isReloadViewUI = false;\n\t\tLocalCacheData.current_doing_context_action = 'new';\n\t\tthis.is_request = false;\n\t\tthis.is_message = false;\n\t\t$this.openEditView();\n\n\t\tvar result_data = {};\n\t\tif ( LocalCacheData.default_filter_for_next_open_view ) {\n\t\t\tresult_data.to_user_id = LocalCacheData.default_filter_for_next_open_view.to_user_id;\n\t\t\tLocalCacheData.default_filter_for_next_open_view = null;\n\t\t}\n\t\t$this.current_edit_record = result_data;\n\t\t$this.initEditView();\n\t}\n\n\tinitEditView() {\n\t\tsuper.initEditView();\n\t\tTTPromise.resolve( 'Message', 'add' );\n\t}\n\n\tsetEditMenuAddIcon( context_btn ) {\n\t\tif ( this.edit_only_mode ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t\tif ( this.is_add || this.is_changed ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t} else {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, true );\n\t\t}\n\t}\n\n\tsetEditMenuEditIcon( context_btn ) {\n\t\tif ( this.edit_only_mode ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t\tif ( !this.is_viewing ) {\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetEditMenuDeleteIcon( context_btn ) {\n\t\tif ( this.edit_only_mode ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t\tif ( !this.current_select_message_control_data ||\n\t\t\tthis.is_edit ||\n\t\t\tthis.is_add ) {\n\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tsetEditMenuDeleteAndNextIcon( context_btn ) {\n\t\tif ( this.edit_only_mode ) {\n\t\t\tContextMenuManager.hideMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t\tif ( !this.current_select_message_control_data ||\n\t\t\tthis.is_edit ||\n\t\t\tthis.is_add ) {\n\n\t\t\tContextMenuManager.disableMenuItem( this.determineContextMenuMountAttributes().id, context_btn.id, false );\n\t\t}\n\t}\n\n\tvalidate() {\n\n\t\tvar $this = this;\n\n\t\tvar record = this.current_edit_record;\n\n\t\tif ( Global.isSet( this.edit_view_ui_dic['subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['subject'].getValue();\n\t\t} else if ( Global.isSet( this.edit_view_ui_dic['message_subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['message_subject'].getValue();\n\t\t} else if ( Global.isSet( this.edit_view_ui_dic['request_subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['request_subject'].getValue();\n\t\t}\n\t\trecord = this.uniformVariable( record );\n\n\t\tthis.api['validate' + this.api.key_name]( record, {\n\t\t\tonResult: function( result ) {\n\t\t\t\t$this.validateResult( result );\n\n\t\t\t}\n\t\t} );\n\t}\n\n\tonSaveClick( ignoreWarning ) {\n\t\tLocalCacheData.current_doing_context_action = 'save';\n\t\tthis.collectUIDataToCurrentEditRecord();\n\t\tvar record = this.current_edit_record;\n\t\tif ( !Global.isSet( ignoreWarning ) ) {\n\t\t\tignoreWarning = false;\n\t\t}\n\t\tif ( Global.isSet( this.edit_view_ui_dic['subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['subject'].getValue();\n\t\t} else if ( Global.isSet( this.edit_view_ui_dic['message_subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['message_subject'].getValue();\n\t\t} else if ( Global.isSet( this.edit_view_ui_dic['request_subject'] ) ) {\n\t\t\trecord.subject = this.edit_view_ui_dic['request_subject'].getValue();\n\t\t}\n\t\trecord = this.uniformVariable( record );\n\n\t\tthis.doSaveAPICall( record, ignoreWarning );\n\t}\n\n\tuniformVariable( records ) {\n\t\tvar reply_data = {};\n\n\t\tif ( this.is_edit ) {\n\n\t\t\treply_data.subject = records.subject;\n\t\t\treply_data.body = records.body;\n\n\t\t\t// message\n\t\t\tif ( records.object_type_id != 50 ) {\n\t\t\t\treply_data.to_user_id = records.from_user_id;\n\t\t\t\treply_data.object_type_id = 5;\n\t\t\t\treply_data.object_id = LocalCacheData.loginUser.id;\n\t\t\t\treply_data.parent_id = records.id;\n\n\t\t\t} else {\n\t\t\t\t// request\n\n\t\t\t\treply_data.object_id = records.object_id;\n\n\t\t\t\treply_data.to_user_id = LocalCacheData.loginUser.id;\n\t\t\t\treply_data.object_type_id = 50;\n\n\t\t\t\treply_data.parent_id = 1;\n\t\t\t}\n\n\t\t\treturn reply_data;\n\n\t\t}\n\n\t\tif ( this.is_add ) {\n\t\t\trecords.object_type_id = 5;\n\t\t\trecords.object_id = LocalCacheData.loginUser.id;\n\t\t\trecords.parent_id = 0;\n\t\t}\n\n\t\treturn records;\n\t}\n\n\tsearch( set_default_menu, page_action, page_number, callBack ) {\n\t\tthis.event_bus.emit( 'tt_topbar', 'profile_pending_counts', { //Update all \"My Profile\" badge.\n\t\t\tobject_types: [ 'notification', 'message' ]\n\t\t} );\n\t\tsuper.search( set_default_menu, page_action, page_number, callBack );\n\t}\n\n\t/* jshint ignore:start */\n\tsetCurrentEditRecordData() {\n\t\tvar $this = this;\n\t\t// If the current_edit_record is an array, then handle them in setEditViewDataDone function.\n\t\t// if ( Global.isArray( this.current_edit_record ) ) { // Commenting out to trial whether single messages can go through this too.\n\t\tif ( this.is_message ) {\n\t\t\tthis.setMessages();\n\t\t} else {\n\t\t\t// TODO: Figure out where to trigger the uniformVariable work on splitting out the subject and body for msg/req stuff. Here or in above section, as multiple messages go elsewhere???\n\n\t\t\t//Set current edit record data to all widgets\n\t\t\tfor ( var key in this.current_edit_record ) {\n\t\t\t\tif ( !this.current_edit_record.hasOwnProperty( key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar widget = this.edit_view_ui_dic[key];\n\t\t\t\tif ( Global.isSet( widget ) ) {\n\t\t\t\t\t// Now that all messages go through setMessages() and no longer through the below, we can remove some of the fields below. Not done yet as theres Add/Edit to consider and test first.\n\t\t\t\t\tswitch ( key ) {\n\t\t\t\t\t\tcase 'from_full_name':\n\t\t\t\t\t\t\twidget.setValue( this.current_edit_record['from_first_name'] + ' ' + this.current_edit_record['from_last_name'] );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'to_full_name':\n\t\t\t\t\t\t\twidget.setValue( this.current_edit_record['to_first_name'] + ' ' + this.current_edit_record['to_last_name'] );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'full_name':\n\t\t\t\t\t\t\twidget.setValue( this.current_edit_record['first_name'] + ' ' + this.current_edit_record['last_name'] );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'subject':\n\t\t\t\t\t\t\tif ( this.is_edit ) {\n\t\t\t\t\t\t\t\tif ( Global.isArray( this.messages ) ) {\n\t\t\t\t\t\t\t\t\twidget.setValue( 'Re: ' + this.messages[0].subject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twidget.setValue( 'Re: ' + this.current_edit_record[key] );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if ( this.is_viewing ) {\n\t\t\t\t\t\t\t\twidget.setValue( this.current_edit_record[key] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'message_body':\n\t\t\t\t\t\tcase 'request_body':\n\t\t\t\t\t\t\twidget.setValue( this.current_edit_record[key] );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\twidget.setValue( this.current_edit_record[key] );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//request will do this when initEmbeddedMessage\n\t\t\tif ( this.is_message && this.current_edit_record && this.current_edit_record.status_id == 10 ) {\n\t\t\t\tthis.api['markRecipientMessageAsRead']( [this.current_edit_record.id], {\n\t\t\t\t\tonResult: function( res ) {\n\t\t\t\t\t\t$this.search( false );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tthis.collectUIDataToCurrentEditRecord(); // #2775 If Messages then, we do not want to store any ui fields to current_edit_record. Its view only, and we dont have references to each generated message anyway, as they generate on the fly.\n\t\t}\n\t\tthis.setEditViewDataDone(); // 2775 notes: also trigger more data/widget handling for request (SINGLE+MULTIPLE)\n\t}\n\n\t/* jshint ignore:end */\n\tautoOpenEditViewIfNecessary() {\n\t\t//Auto open edit view. Should set in IndexController\n\n\t\tswitch ( LocalCacheData.current_doing_context_action ) {\n\t\t\tcase 'view':\n\t\t\t\tif ( LocalCacheData.edit_id_for_next_open_view ) {\n\t\t\t\t\tvar item = {};\n\t\t\t\t\titem.id = LocalCacheData.edit_id_for_next_open_view;\n\t\t\t\t\tif ( LocalCacheData.getAllURLArgs().t === 'request' ) {\n\t\t\t\t\t\titem.object_id = LocalCacheData.getAllURLArgs().object_id;\n\t\t\t\t\t\titem.object_type_id = 50;\n\t\t\t\t\t}\n\t\t\t\t\tthis.onViewClick( item );\n\t\t\t\t\tLocalCacheData.edit_id_for_next_open_view = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'new':\n\t\t\t\tthis.onAddClick();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.autoOpenEditOnlyViewIfNecessary();\n\t}\n\n\tgetDeleteSelectedRecordId() {\n\t\tvar retval = [];\n\t\tif ( this.edit_view ) {\n\t\t\tif ( !this.current_select_message_control_data ) {\n\t\t\t\tTAlertManager.showAlert( $.i18n._( 'Invalid Message id' ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tretval.push( this.current_select_message_control_data.id );\n\t\t} else {\n\t\t\tretval = super.getDeleteSelectedRecordId();\n\t\t}\n\t\treturn retval;\n\t}\n\n\tdoDeleteAPICall( remove_ids, _callback ) {\n\t\tvar callback = _callback || {\n\t\t\tonResult: function( result ) {\n\t\t\t\tthis.isReloadViewUI = false;\n\t\t\t\tthis.onDeleteResult( result, remove_ids );\n\t\t\t}.bind( this )\n\t\t};\n\t\treturn this.api['delete' + this.api.key_name]( remove_ids, this.folder_id, callback );\n\t}\n\n\tsetEditViewDataDone() {\n\t\t// TODO: Refactor this to move into setCurrentEditRecordData, as this is not code that is classed as Data Load Done, its still data loading.\n\t\tvar $this = this;\n\t\tsuper.setEditViewDataDone();\n\n\t\tif ( this.is_viewing ) {\n\n\t\t\tif ( this.is_request ) {\n\t\t\t\tthis.initEmbeddedMessageData();\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Global.isSet( $this.messages ) ) {\n\t\t\t\t$this.messages = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMessages( message_data ) {\n\t\t// This function handles message thread generation for both the message and request types.\n\t\tvar read_ids = [];\n\n\t\tif ( message_data ) {\n\t\t\tthis.messages = message_data;\n\t\t} else {\n\t\t\tthis.messages = this.current_edit_record;\n\t\t}\n\n\t\tif ( !Global.isArray( this.messages ) ) {\n\t\t\t// This function works on an array of messages. If there is only one message, then provide an array of one message and process the same way.\n\t\t\tthis.messages = [this.messages];\n\t\t}\n\n\t\t// Remove all old messages first.\n\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab .second-column.message-container' ).remove();\n\n\t\t/*\n\t\t * Loop through and create the message fields\n\t\t */\n\n\t\t// Collection container for the messages to be held in, until they are added in one go to the page.\n\t\tvar container = $( '<div></div>' );\n\n\t\tfor ( var key = 0; key < this.messages.length; key++ ) {\n\n\t\t\tvar current_item = this.messages[key];\n\t\t\tif ( !current_item.hasOwnProperty( 'id' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( current_item.status_id == 10 ) {\n\t\t\t\tread_ids.push( current_item.id );\n\t\t\t}\n\n\t\t\tvar message_container = $( '<div></div>', { class: \"second-column full-width-column message-container\" } );\n\n\t\t\tif ( key > 0 ) {\n\t\t\t\tmessage_container.append( '<div class=\"message-separator\"></div>' );\n\t\t\t}\n\n\t\t\tif ( this.is_message ) {\n\t\t\t\tthis.addMessageRow( message_container, 'From', 'msg_from_full_name', current_item['from_first_name'] + ' ' + current_item['from_last_name'] );\n\t\t\t\tthis.addMessageRow( message_container, 'To', 'msg_to_full_name', current_item['to_first_name'] + ' ' + current_item['to_last_name'] );\n\t\t\t\tthis.addMessageRow( message_container, 'Date', 'msg_updated_date', current_item['updated_date'] );\n\t\t\t\tthis.addMessageRow( message_container, 'Subject', 'msg_subject', current_item['subject'] );\n\t\t\t\tthis.addMessageRow( message_container, 'Body', 'msg_body', current_item['body'], true, true );\n\n\t\t\t} else if ( this.is_request ) {\n\t\t\t\tthis.addMessageRow( message_container, 'From', 'req_from_full_name', current_item['from_first_name'] + ' ' + current_item['from_last_name'] + '@' + current_item['updated_date'] );\n\t\t\t\tthis.addMessageRow( message_container, 'Subject', 'req_subject', current_item['subject'] );\n\t\t\t\tthis.addMessageRow( message_container, 'Body', 'req_body', current_item['body'], true, true );\n\n\t\t\t} else {\n\t\t\t\t// Error: Message type not supported. Exit. Currently only messages and request types supported.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontainer.append( message_container );\n\t\t}\n\n\t\t// Add the new message to the page\n\t\tthis.edit_view_tab.find( '#tab_message' ).find( '.edit-view-tab' ).append( container.html() );\n\n\t\tif ( read_ids.length > 0 ) {\n\t\t\tvar $this = this;\n\t\t\tthis.api['markRecipientMessageAsRead']( read_ids, {\n\t\t\t\tonResult: function( res ) {\n\t\t\t\t\t$this.search( false );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\taddMessageRow( message_container, label, field, value, set_resize_event, parse_link ) {\n\t\t// Note: Take extra care with this function, as we are building widgets outside of the normal init flow, so compare to the standard flow of buildEditViewUI if anything odd happens.\n\n\t\tvar form_item_input = Global.loadWidgetByName( FormItemType.TEXT );\n\t\tform_item_input.TText( { field: field, selected_able: true } );\n\t\tthis.addEditFieldToColumn( $.i18n._( label ), form_item_input, message_container, '', null, null, set_resize_event );\n\n\t\t// #2775 You must set the value after its added to column, not before, otherwise the field label will not resize after a large value is set.\n\n\t\tif ( parse_link ) {\n\t\t\tform_item_input.html( linkifyStr( value, {\n\t\t\t\ttarget: '_blank',\n\t\t\t\tnl2br: true,\n\t\t\t\tclassName: 'linkified'\n\t\t\t} ) );\n\t\t\tform_item_input.setResizeEvent();\n\t\t} else {\n\t\t\tform_item_input.setValue( value );\n\t\t}\n\n\t\t// #2775 You must set the opacity to 1 after adding to column, as the addEditFieldToColumn sets opacity to 0 during loading, and normally set back to 1 at the bottom of BaseVC.initEditViewData but here we are building widgets outside of the normal init flow.\n\t\tform_item_input.css( 'opacity', '1' );\n\n\t\t// remove the field reference from this.edit_view_ui_dic as we wont track the on-the-fly built fields.\n\t\tdelete this.edit_view_ui_dic[field];\n\t}\n\n\tinitEmbeddedMessageData() {\n\t\t// Used to generate the message threads for a Request type\n\t\tvar $this = this;\n\t\tvar args = {};\n\t\targs.filter_data = {};\n\t\targs.filter_data.object_type_id = 50;\n\t\targs.filter_data.object_id = this.current_edit_record.id;\n\n\t\t$this.api['getEmbeddedMessage']( args, {\n\t\t\tonResult: function( res ) {\n\n\t\t\t\tif ( !$this.edit_view ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar data = res.getResult();\n\t\t\t\t$this.setMessages( data );\n\t\t\t}\n\t\t} );\n\t}\n\n\t// #2775 Commenting out to fix an issue where Delete&Next does not go to the next record. Not 100% certain why this is here, but annotations show something to do with flashing, which does not seem an issue atm.\n\t// /* jshint ignore:start */\n\t// search: function( set_default_menu, page_action, page_number, callBack ) {\n\t// \tthis.refresh_id = null;\n\t// \tsuper.search( set_default_menu, page_action, page_number, callBack );\n\t// }\n\t//\n\t// /* jshint ignore:end */\n\n}\n"],"names":["MessageControlViewController","options","_","$","default_args","filter","context_menu_model","id","context_btn","grid_selected_length","context_menu_array","len","need_break","i","icon","iconName","$this","flag","doNext","result","result_data","p_id","data","item","column_filter","display_columns","column_info","view_id","edit_view_file_name","tab_options","e","ui","record","selected_item","grid_selected_id_array","return_object","selected_id","callback","message_control_data","retval","record_id","next_selected_item","noRefreshUI","a","tab_name","grid_current_page_items","navigation_div","navigation_source_data","target","next_select_item","editId","pager_data","source_data","tab_model","form_item_input","tab_message","tab_message_column1","tab_message_column2","separated_box","tab_label","key","ignoreWarning","records","reply_data","set_default_menu","page_action","page_number","callBack","widget","res","remove_ids","_callback","message_data","read_ids","container","current_item","message_container","label","field","value","set_resize_event","parse_link","linkifyStr","args"],"mappings":"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"}