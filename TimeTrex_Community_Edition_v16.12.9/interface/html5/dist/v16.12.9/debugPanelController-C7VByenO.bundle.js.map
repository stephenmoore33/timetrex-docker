{"version":3,"file":"debugPanelController-C7VByenO.bundle.js","sources":["../../views/developer_tools/debugPanelController.js"],"sourcesContent":["$( document ).on( 'click', '.tt_debug_close_btn', function( e ) {\n\te.preventDefault();\n\tDebug.closePanel();\n} );\n\n$( document ).on( 'change', '#tt_debug_enable_checkbox', function( e ) {\n\te.preventDefault();\n\tDebug.setEnable( $( this ).is( ':checked' ) );\n} );\n\n$( document ).on( 'click', '#trigger_js_exception_button', function( e ) {\n\te.preventDefault();\n\tvar exception_type = $( '#tt_debug_exception_type_select' ).val();\n\n\tswitch ( exception_type ) {\n\t\tcase 'js_error':\n\t\t\tnon_existant_variable.non_existant_function();\n\t\t\tbreak;\n\t\tcase 'js_load_script_parser_error':\n\t\t\tvar script_path = Global.getViewPathByViewId( 'DeveloperTools' ) + 'triggerParserError.js';\n\t\t\t//remove from cache to ensure that we're sending a totally new request\n\t\t\tdelete LocalCacheData.loadedScriptNames[script_path];\n\t\t\t//change the js version number to trigger forced reload\n\t\t\tAPIGlobal.pre_login_data.application_build += '_FORCE';\n\t\t\treturn Global.loadScript( script_path, function( result ) {\n\t\t\t\tDebug.Arr( result, 'no error happened.' );\n\t\t\t} );\n\t\tcase 'js_load_script_404_error':\n\t\t\tGlobal.loadScript( 'nonexistantscript.js', function( result ) {\n\t\t\t\tDebug.Arr( result, 'no error happened.' );\n\t\t\t} );\n\t\t\tbreak;\n\t}\n} );\n\n$( document ).on( 'click', '#trigger_js_timeout_button', function( e ) {\n\te.preventDefault();\n\tGlobal.idle_time = 100;\n\tGlobal.doPingIfNecessary();\n} );\n\n$( document ).on( 'change', '#tt_debug_exception_verbosity', function( e ) {\n\te.preventDefault();\n\tDebug.setVerbosity( $( this ).val() );\n} );\n\n$( document ).on( 'change', '#tt_overlay_disable_checkbox', function( e ) {\n\te.preventDefault();\n\tGlobal.UNIT_TEST_MODE = $( this ).is( ':checked' );\n\tGlobal.event_bus.emit( 'tt_left_container', 'rebuild_menu' );\n} );\n\n$( document ).on( 'click', '#qunit_test_button', function( e ) {\n\te.preventDefault();\n\t$( '#tt_debug_console' ).css( 'width', '80%' );\n\t$( '#tt_debug_console' ).css( 'margin', '0 auto' );\n\trunUnitTests();\n} );\n\n/**\n * Put all unit tests in this function\n */\n\n$( document ).on( 'change', '#tt_output_variable_select', function( e ) {\n\te.preventDefault();\n\toutput_system_data( $( this ).val() );\n} );\n\n$( document ).on( 'click', '#trigger_output_variable_select', function( e ) {\n\te.preventDefault();\n\toutput_system_data( $( '#tt_output_variable_select' ).val() );\n} );\n\n$( document ).on( 'click', '#trigger_arbitrary_script', function( e ) {\n\te.preventDefault();\n\tvar script = $( '#arbitrary_script' ).val();\n\tscript = script.replace( /(\\r\\n|\\n|\\r)/gm, '' ); //strip all line-ends\n\tconsole.log( eval( script ) );\n} );\n\n// #VUETEST\n$( document ).on( 'click', '#load_vue_test_button', function( e ) {\n\te.preventDefault();\n\twindow.VueRouter.push('test');\n} );\n\n\n\n$( document ).on( 'click', '#awesomebox_test', function( e ) {\n\te.preventDefault();\n\tDebug.showAwesomeBoxTest();\n} );\n\n$( document ).on( 'click', '#grid_test', function( e ) {\n\te.preventDefault();\n\tDebug.showGridTest();\n} );\n\n$( document ).on( 'click', '#WidgetTest_test', function( e ) {\n\te.preventDefault();\n\tDebug.showWidgetTest();\n} );\n\nfunction breakOn( obj, propertyName, mode, func ) {\n\t// this is directly from https://github.com/paulmillr/es6-shim\n\tfunction getPropertyDescriptor( obj, name ) {\n\t\tvar property = Object.getOwnPropertyDescriptor( obj, name );\n\t\tvar proto = Object.getPrototypeOf( obj );\n\t\twhile ( property === undefined && proto !== null ) {\n\t\t\tproperty = Object.getOwnPropertyDescriptor( proto, name );\n\t\t\tproto = Object.getPrototypeOf( proto );\n\t\t}\n\t\treturn property;\n\t}\n\n\tfunction verifyNotWritable() {\n\t\tif ( mode !== 'read' )\n\t\t\tthrow \"This property is not writable, so only possible mode is 'read'.\";\n\t}\n\n\tvar enabled = true;\n\tvar originalProperty = getPropertyDescriptor( obj, propertyName );\n\tvar newProperty = { enumerable: originalProperty.enumerable };\n\n\t// write\n\tif ( originalProperty.set ) {// accessor property\n\t\tnewProperty.set = function( val ) {\n\t\t\tif ( enabled && ( !func || func && func( val ) ) )\n\t\t\t\tdebugger;\n\n\t\t\toriginalProperty.set.call( this, val );\n\t\t};\n\t} else if ( originalProperty.writable ) {// value property\n\t\tnewProperty.set = function( val ) {\n\t\t\tif ( enabled && ( !func || func && func( val ) ) )\n\t\t\t\tdebugger;\n\n\t\t\toriginalProperty.value = val;\n\t\t};\n\t} else {\n\t\tverifyNotWritable();\n\t}\n\n\t// read\n\tnewProperty.get = function( val ) {\n\t\tif ( enabled && mode === 'read' && ( !func || func && func( val ) ) )\n\t\t\tdebugger;\n\n\t\treturn originalProperty.get ? originalProperty.get.call( this, val ) : originalProperty.value;\n\t};\n\n\tObject.defineProperty( obj, propertyName, newProperty );\n\n\treturn {\n\t\tdisable: function() {\n\t\t\tenabled = false;\n\t\t},\n\n\t\tenable: function() {\n\t\t\tenabled = true;\n\t\t}\n\t};\n};\n\nfunction runUnitTests() {\n\tif ( $( '#qunit_script' ).length == 0 ) {\n\t\t$( '<script id=\\'qunit_script\\' src=\\'framework/qunit/qunit.js\\'></script>' ).appendTo( 'head' );\n\t\t$( '<link rel=\\'stylesheet\\' type=\\'text/css\\' href=\\'framework/qunit/qunit.css\\'>' ).appendTo( 'head' );\n\t\tQUnit.config.autostart = false;\n\t\t$( '#qunit_container' ).css( 'width', '100vw' );\n\t\t$( '#qunit_container' ).css( 'height', '100vh' );\n\t\t$( '#qunit_container' ).css( 'overflow-y', 'scroll' );\n\t\t$( '#qunit_container' ).css( 'position', 'fixed' );\n\t\t$( '#qunit_container' ).css( 'top', '0px' );\n\t\t$( '#qunit_container' ).css( 'left', '0px' );\n\t\t$( '#qunit_container' ).css( 'z-index', '100' );\n\t\t$( '#qunit_container' ).css( 'background', '#fff' );\n\t\t$( '#qunit_container' ).show();\n\n\t\t$( '#tt_debug_console' ).remove();\n\t}\n\tif ( !window.qunit_initiated ) {\n\t\twindow.qunit_initiated = true;\n\t\t//QUnit.start(); //This causes a JavaScript exception, but does not seem to be required. Test ran without it.\n\t}\n\n\tQUnit.module( 'QUnit Sanity' );\n\tQUnit.test( 'QUnit test', function( assert ) {\n\t\tassert.ok( 1 == '1', 'QUnit is loaded and sane!' );\n\t} );\n\n\tQUnit.module( 'Global.js' );\n\tQUnit.test( 'Global.MoneyRound', function( assert ) {\n\t\tassert.ok( Global.MoneyRound( 1.005, 2 ) == '1.01', 'Global.MoneyRound(1.005, 2) == 1.01 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 1.77777777, 2 ) == '1.78', 'Global.MoneyRound(1.77777777, 2) == 1.78 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 9.1, 2 ) == '9.10', 'Global.MoneyRound(9.1, 2) == 9.10 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 1.0049999999999999, 2 ) == '1.01', 'Global.MoneyRound(1.0049999999999999, 2) == 1.01 -- Passed!' );\n\n\t\tassert.ok( Global.MoneyRound( -28.120, 2 ) == '-28.12', 'Global.MoneyRound(-28.120, 2) == -28.12 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 28.120, 2 ) == '28.12', 'Global.MoneyRound(28.120, 2) == 28.12 -- Passed!' );\n\n\t\tassert.ok( Global.MoneyRound( -28.124, 2 ) == '-28.12', 'Global.MoneyRound(-28.124, 2) == -28.12 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 28.124, 2 ) == '28.12', 'Global.MoneyRound(28.124, 2) == 28.12 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( -28.125, 2 ) == '-28.13', 'Global.MoneyRound(-28.125, 2) == -28.13 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 28.125, 2 ) == '28.13', 'Global.MoneyRound(28.125, 2) == 28.13 -- Passed!' );\n\n\t\tassert.ok( Global.MoneyRound( -28.129, 2 ) == '-28.13', 'Global.MoneyRound(-28.129, 2) == -28.13 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 28.129, 2 ) == '28.13', 'Global.MoneyRound(28.129, 2) == 28.13 -- Passed!' );\n\n\t\tassert.ok( Global.MoneyRound( -0.124, 2 ) == '-0.12', 'Global.MoneyRound(-0.124, 2) == -0.12 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 0.124, 2 ) == '0.12', 'Global.MoneyRound(0.124, 2) == 0.12 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( -0.155, 2 ) == '-0.16', 'Global.MoneyRound(-0.155, 2) == -0.16 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 0.155, 2 ) == '0.16', 'Global.MoneyRound(0.155, 2) == 0.16 -- Passed!' );\n\n\t\tassert.ok( Global.MoneyRound( -0.001, 2 ) == '0.00', 'Global.MoneyRound(-0.001, 2) == 0.00 -- Passed!' );\n\t\tassert.ok( Global.MoneyRound( 0.001, 2 ) == '0.00', 'Global.MoneyRound(0.001, 2) == 0.00 -- Passed!' );\n\t} );\n\n\tQUnit.test( 'Global.js sort-prefix', function( assert ) {\n\t\tvar res = Global.removeSortPrefix( '-1234-11111111-1111-1111-1111-111111111111' );\n\t\tassert.ok( res == '11111111-1111-1111-1111-111111111111', 'stripped from synth uuid a.' );\n\n\t\tvar res = Global.removeSortPrefix( '11111111-1111-1111-1111-111111111111' );\n\t\tassert.ok( res == '11111111-1111-1111-1111-111111111111', 'stripped from synth uuid no sort-prefix.' );\n\n\t\tvar res = Global.removeSortPrefix( '-1234-05d3d547-0e2b-9233-65ba-4e229fd72bc0' );\n\t\tassert.ok( res == '05d3d547-0e2b-9233-65ba-4e229fd72bc0', 'stripped from valid UUID with 4 digit numeric section in the middle.' );\n\n\t\tvar res = Global.removeSortPrefix( '05d3d547-0e2b-9233-65ba-4e229fd72bc0' );\n\t\tassert.ok( res == '05d3d547-0e2b-9233-65ba-4e229fd72bc0', 'stripped from valid UUID with 4 digit numeric section in the middle.' );\n\n\t\tvar res = Global.removeSortPrefix( '-1234-111' );\n\t\tassert.ok( res == '111', 'stripped from int a.' );\n\n\t\tvar res = Global.removeSortPrefix( '111' );\n\t\tassert.ok( res == '111', 'stripped from int with no sort-prefix.' );\n\n\t\tvar res = Global.removeSortPrefix( '-1234-testStringGalrblyBlah' );\n\t\tassert.ok( res == 'testStringGalrblyBlah', 'stripped from string a.' );\n\n\t\tvar res = Global.removeSortPrefix( 'testStringGalrblyBlah' );\n\t\tassert.ok( res == 'testStringGalrblyBlah', 'stripped from string with no sort-prefix.' );\n\n\t\tvar res = Global.removeSortPrefixFromArray( {\n\t\t\t'-1112-testStringGalrblyBlah': 'string',\n\t\t\t'-1113-1234': 'int',\n\t\t\t'-1234-11111111-1111-1111-1111-111111111111': 'uuid'\n\t\t} );\n\t\tvar cnt = 0;\n\n\t\tassert.ok( res['testStringGalrblyBlah'] == 'string', 'prefix stripped properly' );\n\t\tassert.ok( res['1234'] == 'int', 'prefix stripped properly' );\n\t\tassert.ok( res['11111111-1111-1111-1111-111111111111'] == 'uuid', 'prefix stripped properly' );\n\t} );\n\n\tQUnit.test( 'Global.js roundTime', function( assert ) {\n\t\tassert.equal( Global.roundTime( 0, 60 ), 0 );\n\t\tassert.equal( Global.roundTime( 60, 0 ), 60 );\n\t} );\n\n\tQUnit.test( 'Global.js parseTimeUnit HH:MM:SS', function( assert ) {\n\t\tassert.equal( Global.parseTimeUnit( '00:01', 10 ), 60 );\n\t\tassert.equal( Global.parseTimeUnit( '-00:01', 10 ), -60 );\n\n\t\tassert.equal( Global.parseTimeUnit( '01:00', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '10:00', 10 ), 36000 );\n\t\tassert.equal( Global.parseTimeUnit( '100:00', 10 ), 360000 );\n\t\tassert.equal( Global.parseTimeUnit( '1000:00', 10 ), 3600000 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:00', 10 ), 36000000 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:01.5', 10 ), 36000060 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:01:01', 12 ), 36000061 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:01:01.1', 12 ), 36000061.1 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:01:01.123456', 12 ), 36000061.123456 );\n\t\tassert.equal( Global.parseTimeUnit( '10000:01:01.99', 12 ), 36000061.99 );\n\t\tassert.equal( Global.parseTimeUnit( '999999999999', 10 ), 3599999999996400 );\n\t\tassert.equal( Global.parseTimeUnit( '999999999999999999', 10 ), Number.MAX_SAFE_INTEGER );\n\n\t\tassert.equal( Global.parseTimeUnit( '01', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '-1', 10 ), -3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1:', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1:00:00', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1:00:01', 10 ), 3601 );\n\t\tassert.equal( Global.parseTimeUnit( '\"1:00:01\"', 10 ), 3601 );\n\n\t\tassert.equal( Global.parseTimeUnit( '00:60', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( ':60', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( ':1', 10 ), 60 );\n\n\t\tassert.equal( Global.parseTimeUnit( '1:00:01.5', 10 ), 3601.5 );\n\t\tassert.equal( Global.parseTimeUnit( '\"1:00:01.5\"', 10 ), 3601.5 );\n\t\tassert.equal( Global.parseTimeUnit( '1:1.5', 10 ), 3660 );\n\n\t\t//Hybrid mode.\n\t\tassert.equal( Global.parseTimeUnit( '1.000', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1.00', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1', 10 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '-1', 10 ), -3600 );\n\t\tassert.equal( Global.parseTimeUnit( '01', 10 ), 3600 );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.25', 10 ), 900 );\n\t\tassert.equal( Global.parseTimeUnit( '0.50', 10 ), 1800 );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.34', 10 ), 1200 ); //Automatically rounds to nearest 1min\n\t} );\n\n\tQUnit.test( 'Global.js parseTimeUnit Hours', function( assert ) {\n\t\tassert.equal( Global.parseTimeUnit( '1000.0000', 20 ), 3600000 );\n\t\tassert.equal( Global.parseTimeUnit( '1,000.0000', 20 ), 3600000 );\n\t\tassert.equal( Global.parseTimeUnit( '1 000.0000', 20 ), 3600000 );\n\t\tassert.equal( Global.parseTimeUnit( '-1,000.0000', 20 ), -3600000 );\n\t\tassert.equal( Global.parseTimeUnit( ' \"-1, 000.0000\" ', 20 ), -3600000 );\n\t\tassert.equal( Global.parseTimeUnit( '1.000', 20 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1.00', 20 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '1', 20 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( '-1', 20 ), -3600 );\n\t\tassert.equal( Global.parseTimeUnit( '01', 20 ), 3600 );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.25', 20 ), 900 );\n\t\tassert.equal( Global.parseTimeUnit( '0.50', 20 ), 1800 );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.34', 20 ), 1200 ); //Automatically rounds to nearest 1min\n\n\t\t//Hybrid mode\n\t\tassert.equal( Global.parseTimeUnit( '00:01', 20 ), 60 );\n\t\tassert.equal( Global.parseTimeUnit( '-00:01', 20 ), -60 );\n\n\t\tassert.equal( Global.parseTimeUnit( ':60', 20 ), 3600 );\n\t\tassert.equal( Global.parseTimeUnit( ':1', 20 ), 60 );\n\n\t\tassert.equal( Global.parseTimeUnit( '1:00:01.5', 20 ), 3600 ); //These don't match PHP due to how\n\t\tassert.equal( Global.parseTimeUnit( '1:1.5', 20 ), 3660 );\n\n\t} );\n\n\tQUnit.test( 'Global.js parseTimeUnit Hours Rounding', function( assert ) {\n\t\tassert.equal( Global.parseTimeUnit( '0.02', 20 ), ( 1 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.03', 20 ), ( 2 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.05', 20 ), ( 3 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.06', 20 ), ( 4 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.08', 20 ), ( 5 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.10', 20 ), ( 6 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.12', 20 ), ( 7 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.13', 20 ), ( 8 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.15', 20 ), ( 9 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.17', 20 ), ( 10 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.18', 20 ), ( 11 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.20', 20 ), ( 12 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.22', 20 ), ( 13 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.23', 20 ), ( 14 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.25', 20 ), ( 15 * 60 ) );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.27', 20 ), ( 16 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.28', 20 ), ( 17 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.30', 20 ), ( 18 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.32', 20 ), ( 19 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.33', 20 ), ( 20 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.35', 20 ), ( 21 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.37', 20 ), ( 22 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.39', 20 ), ( 23 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.40', 20 ), ( 24 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.42', 20 ), ( 25 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.43', 20 ), ( 26 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.45', 20 ), ( 27 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.47', 20 ), ( 28 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.48', 20 ), ( 29 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.50', 20 ), ( 30 * 60 ) );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.52', 20 ), ( 31 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.53', 20 ), ( 32 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.55', 20 ), ( 33 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.57', 20 ), ( 34 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.58', 20 ), ( 35 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.60', 20 ), ( 36 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.62', 20 ), ( 37 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.63', 20 ), ( 38 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.65', 20 ), ( 39 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.67', 20 ), ( 40 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.68', 20 ), ( 41 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.70', 20 ), ( 42 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.72', 20 ), ( 43 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.73', 20 ), ( 44 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.75', 20 ), ( 45 * 60 ) );\n\n\t\tassert.equal( Global.parseTimeUnit( '0.77', 20 ), ( 46 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.78', 20 ), ( 47 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.80', 20 ), ( 48 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.82', 20 ), ( 49 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.84', 20 ), ( 50 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.85', 20 ), ( 51 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.87', 20 ), ( 52 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.89', 20 ), ( 53 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.90', 20 ), ( 54 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.92', 20 ), ( 55 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.94', 20 ), ( 56 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.95', 20 ), ( 57 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.97', 20 ), ( 58 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '0.99', 20 ), ( 59 * 60 ) );\n\t\tassert.equal( Global.parseTimeUnit( '1.00', 20 ), ( 60 * 60 ) );\n\t} );\n\n\tQUnit.test( 'Global.js getTimeUnit', function( assert ) {\n\t\tassert.equal( Global.getTimeUnit( 3600, 10 ), '01:00' );\n\t\tassert.equal( Global.getTimeUnit( 3660, 10 ), '01:01' );\n\t\tassert.equal( Global.getTimeUnit( 36060, 10 ), '10:01' );\n\t\tassert.equal( Global.getTimeUnit( 36660, 10 ), '10:11' );\n\t\tassert.equal( Global.getTimeUnit( 360660, 10 ), '100:11' );\n\t\tassert.equal( Global.getTimeUnit( 3600660, 10 ), '1000:11' );\n\t\tassert.equal( Global.getTimeUnit( 36000660, 10 ), '10000:11' );\n\t\tassert.equal( Global.getTimeUnit( 360000660, 10 ), '100000:11' );\n\t\tassert.equal( Global.getTimeUnit( 3600000660, 10 ), '1000000:11' );\n\n\t\tassert.equal( Global.getTimeUnit( -3600, 10 ), '-01:00' );\n\t\tassert.equal( Global.getTimeUnit( -3660, 10 ), '-01:01' );\n\t\tassert.equal( Global.getTimeUnit( -36060, 10 ), '-10:01' );\n\t\tassert.equal( Global.getTimeUnit( -36660, 10 ), '-10:11' );\n\t\tassert.equal( Global.getTimeUnit( -360660, 10 ), '-100:11' );\n\t\tassert.equal( Global.getTimeUnit( -3600660, 10 ), '-1000:11' );\n\t\tassert.equal( Global.getTimeUnit( -36000660, 10 ), '-10000:11' );\n\t\tassert.equal( Global.getTimeUnit( -360000660, 10 ), '-100000:11' );\n\t\tassert.equal( Global.getTimeUnit( -3600000660, 10 ), '-1000000:11' );\n\n\t\tassert.equal( Global.getTimeUnit( 3600, 12 ), '01:00:00' );\n\t\tassert.equal( Global.getTimeUnit( 3661, 12 ), '01:01:01' );\n\t\tassert.equal( Global.getTimeUnit( 3661.1, 12 ), '01:01:01.1' );\n\t\tassert.equal( Global.getTimeUnit( 3661.123456, 12 ), '01:01:01.123456' );\n\t\tassert.equal( Global.getTimeUnit( 3661.99, 12 ), '01:01:01.99' );\n\t\tassert.equal( Global.getTimeUnit( 36060, 12 ), '10:01:00' );\n\t\tassert.equal( Global.getTimeUnit( 36660, 12 ), '10:11:00' );\n\n\t\tassert.equal( Global.getTimeUnit( 3600, 23 ), '1.0000' );\n\t\tassert.equal( Global.getTimeUnit( 3660, 23 ), '1.0167' );\n\t\tassert.equal( Global.getTimeUnit( 3600660, 23 ), '1000.1833' );\n\n\t\tassert.equal( Global.getTimeUnit( 603, 99 ), '10:03' );\n\t\tassert.equal( Global.getTimeUnit( 3600, 99 ), '60:00' );\n\t} );\n\n\tQUnit.test( 'Global.js getDaysInSpan', function( assert ) {\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 7 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, true, true, true, true, true, true ), 6 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, true, true, true, true, true ), 5 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, false, true, true, true, true ), 4 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, false, false, true, true, true ), 3 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, false, false, false, true, true ), 2 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, false, false, false, false, true ), 1 );\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', false, false, false, false, false, false, false ), 0 );\n\n\t\tassert.equal( Global.getDaysInSpan( '01-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 7 );\n\t\tassert.equal( Global.getDaysInSpan( '02-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 6 );\n\t\tassert.equal( Global.getDaysInSpan( '03-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 5 );\n\t\tassert.equal( Global.getDaysInSpan( '04-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 4 );\n\t\tassert.equal( Global.getDaysInSpan( '05-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 3 );\n\t\tassert.equal( Global.getDaysInSpan( '06-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 2 );\n\t\tassert.equal( Global.getDaysInSpan( '07-May-2022', '07-May-2022', true, true, true, true, true, true, true ), 1 );\n\t} );\n\n\tQUnit.module( 'UUID Generation' );\n\tvar uuids = [];\n\tQUnit.test( 'UUID TIGHTLOOP (default logged in user seed)', function( assert ) {\n\t\tvar max = 3000;\n\t\tfor ( var i = 0; i < max; i++ ) {\n\t\t\tuuids.push( TTUUID.generateUUID() );\n\t\t}\n\t\tassert.ok( hasDuplicates( uuids, assert ) == false, 'Duplicate UUIDs!' );\n\t\tfor ( var i = 0; i < max; i++ ) {\n\t\t\tassert.ok( TTUUID.isUUID( uuids[i] ), 'is UUID' );\n\t\t}\n\t} );\n\n\tuuids = [];\n\tQUnit.test( 'UUID TIGHTLOOP (random seed)', function( assert ) {\n\t\tvar user_id = LocalCacheData.loginUser.id;\n\t\tLocalCacheData.loginUser.id = null;\n\t\tvar max = 3000;\n\t\tfor ( var i = 0; i < max; i++ ) {\n\t\t\tuuids.push( TTUUID.generateUUID() );\n\t\t}\n\t\tassert.ok( hasDuplicates( uuids, assert ) == false, 'Duplicate UUIDs!' );\n\t\tfor ( var i = 0; i < max; i++ ) {\n\t\t\tassert.ok( TTUUID.isUUID( uuids[i] ), 'is UUID' );\n\t\t}\n\t\tLocalCacheData.loginUser.id = user_id;\n\t} );\n\n\tQUnit.test( 'Global.isNumeric()', function( assert ) {\n\t\tassert.ok( Global.isNumeric( 1483228800 ) == true, '1483228800 is an epoch and numeric' );\n\t\tassert.ok( Global.isNumeric( '1483228800' ) == true, '1483228800 is an epoch and a numeric string' );\n\n\t\t//assert.ok(  Global.isNumeric(\"1,483,228,800\") == false , '1,483,228,800 has commas and so is not numeric'); //does not handle commas\n\n\t\tassert.ok( Global.isNumeric( 2.1234 ) == true, '2.1234 is a float and numeric' );\n\t\tassert.ok( Global.isNumeric( -2.1234 ) == true, '-2.1234 is a negative float and numeric' );\n\t\tassert.ok( Global.isNumeric( '2.1234' ) == true, '\"2.1234\" is numeric string' );\n\t\tassert.ok( Global.isNumeric( -3 ) == true, '-3 is numeric' );\n\t\tassert.ok( Global.isNumeric( 0 ) == true, '0 is numeric' );\n\t\tassert.ok( Global.isNumeric( 1 ) == true, '1 is numeric' );\n\t\tassert.ok( Global.isNumeric( '1' ) == true, '\"1\" is a numeric string' );\n\t\tassert.ok( Global.isNumeric( 'asdf' ) == false, '\"asdf\" is not numeric' );\n\t\tassert.ok( Global.isNumeric( '' ) == false, '\"\" is not numeric' );\n\t} );\n\n\t/**\n\t *\n\t * ASYNCHRONOUS TESTS GO AT THE BOTTOM\n\t *\n\t */\n\n\tQUnit.module( 'TTPromise.js' );\n\tQUnit.test( 'TTPromise Case 1: wait(category) on a single promise', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'test', 'test1' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.wait( 'test', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test resolved.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'undefined', 'promises[test] is null.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 0, 'filterPromiseArray(test).length == 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test1' ) == false, 'filterPromiseArray(\"test\",\"test1\") length = 0.' );\n\t\t\tdone();\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test1'] ) == 'object', 'promises object length = 1.' );\n\t\tTTPromise.resolve( 'test', 'test1' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 1b: wait(category) on a single promise with reject', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'test', 'test1' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.wait( 'test', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 0 == '1', 'TEST Promise test resolved.' ); //THIS SHOULD NOT BE CALLED.\n\t\t\tdone();\n\t\t}, function() {\n\t\t\t//will be run on reject()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test rejected.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'undefined', 'promises[test] is null.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 0, 'filterPromiseArray(test).length == 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test1' ) == false, 'filterPromiseArray(\"test\",\"test1\") length = 0.' );\n\t\t\tdone();\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test1'] ) == 'object', 'promises object length = 1.' );\n\t\tTTPromise.reject( 'test', 'test1' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 1c: wait(category) two promises with two rejects on category', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'test', 'test1' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.add( 'test', 'test2' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 2, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 2, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tremaining_reject_promises = 0;\n\t\tTTPromise.wait( 'test', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 0 == '1', 'TEST Promise test resolved.' ); //Fail the test if this is called, since there is a reject.\n\t\t\tdone();\n\t\t}, function() {\n\t\t\t//will be run on reject()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test rejected.' );\n\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'filterPromiseArray(test).length == 1.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test1' ) == false, 'filterPromiseArray(\"test\",\"test1\") length = 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test2' ).length == 1, 'filterPromiseArray(\"test\",\"test2\") length = 0.' );\n\n\t\t\tassert.ok( remaining_reject_promises == 0, 'Make sure error callback is not called more than once.' );\n\n\t\t\tremaining_reject_promises++;\n\n\t\t\tdone(); //Only finish once all promises are rejected.\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test1'] ) == 'object', 'promises object length = 2.' );\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test2'] ) == 'object', 'promises object length = 2.' );\n\t\tTTPromise.reject( 'test', 'test1' );\n\t\tTTPromise.reject( 'test', 'test2' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 1d: wait(category) two promises with one reject one resolve on category', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'test', 'test1' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.add( 'test', 'test2' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 2, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 2, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tremaining_reject_promises = 0;\n\t\tTTPromise.wait( 'test', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 0 == '1', 'TEST Promise test resolved.' ); //Fail the test if this is called, since there is a reject.\n\t\t\tdone();\n\t\t}, function() {\n\t\t\t//will be run on reject()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test rejected.' );\n\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'filterPromiseArray(test).length == 1.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test1' ) == false, 'filterPromiseArray(\"test\",\"test1\") length = 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test2' ).length == 1, 'filterPromiseArray(\"test\",\"test2\") length = 0.' );\n\n\t\t\tassert.ok( remaining_reject_promises == 0, 'Make sure error callback is not called more than once.' );\n\n\t\t\tremaining_reject_promises++;\n\n\t\t\tdone(); //Only finish once all promises are rejected.\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test1'] ) == 'object', 'promises object length = 2.' );\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test2'] ) == 'object', 'promises object length = 2.' );\n\t\tTTPromise.reject( 'test', 'test1' );\n\t\tTTPromise.resolve( 'test', 'test2' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 1e: wait(category) two promises with one resolve and one reject on category', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'test', 'test1' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.add( 'test', 'test2' );\n\t\tassert.ok( typeof ( TTPromise.promises['test'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['test'] ).length == 2, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 2, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tremaining_reject_promises = 0;\n\t\tTTPromise.wait( 'test', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 0 == '1', 'TEST Promise test resolved.' ); //Fail the test if this is called, since there is a reject.\n\t\t\tdone();\n\t\t}, function() {\n\t\t\t//will be run on reject()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test rejected.' );\n\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test' ).length == 1, 'filterPromiseArray(test).length == 1.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test1' ).length == 1, 'filterPromiseArray(\"test\",\"test1\") length = 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'test', 'test2' ) == false, 'filterPromiseArray(\"test\",\"test2\") length = 0.' );\n\n\t\t\tassert.ok( remaining_reject_promises == 0, 'Make sure error callback is not called more than once.' );\n\n\t\t\tremaining_reject_promises++;\n\n\t\t\tdone(); //Only finish once all promises are rejected.\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test1'] ) == 'object', 'promises object length = 2.' );\n\t\tassert.ok( typeof ( TTPromise.promises['test']['test2'] ) == 'object', 'promises object length = 2.' );\n\t\tTTPromise.resolve( 'test', 'test1' );\n\t\tTTPromise.reject( 'test', 'test2' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 2: wait(\\'one_of_many_categories\\').', function( assert ) {\n\t\tvar done = assert.async();\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj empty.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'testa', 'test1' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testa' ).length == 1, 'filterPromiseArray(testa).length == 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testa', 'test1' ).length == 1, 'filterPromiseArray(\"testa\",\"test1\") length = 1.' );\n\n\t\tTTPromise.add( 'testa', 'test2' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testa' ).length == 2, 'filterPromiseArray(testa).length == 2.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testa', 'test2' ).length == 1, 'filterPromiseArray(\"testa\",\"test1\") length = 1.' );\n\n\t\tTTPromise.add( 'testb', 'test1b' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testb' ).length == 1, 'filterPromiseArray(testb).length == 1' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testb', 'test1b' ).length == 1, 'filterPromiseArray(\"testb\",\"test1b\") length = 1.' );\n\n\t\tTTPromise.add( 'testb', 'test2b' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testb' ).length == 2, 'filterPromiseArray(testb).length == 2.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testb', 'test1b' ).length == 1, 'filterPromiseArray(\"testb\",\"test1b\") length = 1.' );\n\n\t\tTTPromise.wait( 'testa', null, function() {\n\t\t\t//Debug.Arr(TTPromise,'Case2 TTPromise',null,null,null,10);\n\t\t\tassert.ok( 1 == '1', 'TEST Promise testa resolved.' );\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( typeof ( TTPromise.promises['testa'] ) == 'undefined', 'promises[testa] is null.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises['testb'] ) == 'object', 'promises[testb] is not null.' );\n\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'testb' ).length == 2, 'filterPromiseArray(testb).length == 1' ); //one is resolved. should return only 1\n\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'testa', 'test1' ).length == 0, 'filterPromiseArray(\"testb\",\"test1b\") length = ' + TTPromise.filterPromiseArray( 'testa', 'test1' ).length );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'testa', 'test2' ).length == 0, 'filterPromiseArray(\"testb\",\"test1b\") length = ' + TTPromise.filterPromiseArray( 'testa', 'test2' ).length );\n\t\t\tdone();\n\t\t} );\n\n\t\tTTPromise.resolve( 'testb', 'test1b' );\n\t\tTTPromise.resolve( 'testa', 'test1' );\n\t\tTTPromise.resolve( 'testa', 'test2' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 3: wait(null, null, callback) all cateogries.', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj empty.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'testc', 'test1' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc', 'test1' ).length == 1, 'TTPromise.filterPromiseArray(testc,test1).length == 1,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc' ).length == 1, 'TTPromise.filterPromiseArray(testc).length == 1,.' );\n\n\t\tTTPromise.add( 'testc', 'test2' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc', 'test2' ).length == 1, 'TTPromise.filterPromiseArray(testc,test1).length == 1,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc' ).length == 2, 'TTPromise.filterPromiseArray(testc).length == 2,.' );\n\n\t\tTTPromise.add( 'testd', 'test1b' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testd', 'test1b' ).length == 1, 'TTPromise.filterPromiseArray(testd,test1b).length == 1,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc' ).length == 2, 'TTPromise.filterPromiseArray(testc).length == 2,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testd' ).length == 1, 'TTPromise.filterPromiseArray(testd).length == 1,.' );\n\n\t\tTTPromise.add( 'testd', 'test2b' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testd', 'test2b' ).length == 1, 'TTPromise.filterPromiseArray(testd,test2b).length == 1,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testc' ).length == 2, 'TTPromise.filterPromiseArray(testc).length == 2,.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'testd' ).length == 2, 'TTPromise.filterPromiseArray(testd).length == 2,.' );\n\n\t\tTTPromise.wait( null, null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( typeof ( TTPromise.promises['testc'] ) == 'undefined', 'promises[testc] is null.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises['testd'] ) == 'undefined', 'promises[testd] is  null.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'testc' ).length == 0, 'TTPromise.filterPromiseArray(testc).length == 0,.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'testd' ).length == 0, 'TTPromise.filterPromiseArray(testd).length == 0,.' );\n\t\t\tdone();\n\t\t} );\n\n\t\tassert.ok( TTPromise.filterPromiseArray().length == 4, 'TTPromise.filterPromiseArray().length == 4' );\n\n\t\tTTPromise.resolve( 'testd', 'test1b' );\n\t\tTTPromise.resolve( 'testd', 'test2b' );\n\t\tTTPromise.resolve( 'testc', 'test1' );\n\t\tTTPromise.resolve( 'testc', 'test2' );\n\n\t} );\n\n\tQUnit.test( 'TTPromise Case 4: wait(category, key) on a single promise', function( assert ) {\n\t\tvar done = assert.async();\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'Reports', 'LoadReports' );\n\t\tassert.ok( typeof ( TTPromise.promises['Reports'] ) == 'object', 'TTPromise.promises[\\'test\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['Reports'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'Reports' ).length == 1, 'TTPromise.filterPromiseArray(test).length == 1' );\n\n\t\tTTPromise.wait( 'Reports', 'LoadReports', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( 1 == '1', 'TEST Promise test resolved.' );\n\t\t\tassert.ok( typeof ( TTPromise.promises['Reports'] ) == 'undefined', 'promises[Reports] is null.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'Reports' ).length == 0, 'filterPromiseArray(Reports).length == 0.' );\n\t\t\tassert.ok( TTPromise.filterPromiseArray( 'Reports', 'LoadReports' ) == false, 'filterPromiseArray(\"Reports\",\"LoadReports\") length = 0.' );\n\t\t\tdone();\n\t\t} );\n\n\t\tassert.ok( typeof ( TTPromise.promises['Reports']['LoadReports'] ) == 'object', 'promises object length = 1.' );\n\t\tTTPromise.resolve( 'Reports', 'LoadReports' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 5: wait(category, key,function) vs wait(null,null,function)', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'groupone', 'one' );\n\t\tassert.ok( typeof ( TTPromise.promises['groupone'] ) == 'object', 'TTPromise.promises[\\'groupone\\'] exists.' );\n\t\tassert.ok( Object.keys( TTPromise.promises['groupone'] ).length == 1, 'promises object length = 1.' );\n\t\tassert.ok( TTPromise.filterPromiseArray( 'groupone' ).length == 1, 'TTPromise.filterPromiseArray(groupone).length == 1' );\n\n\t\tTTPromise.wait( 'groupone', 'one', function() {\n\t\t\t//will be run on resolve()\n\t\t\tDebug.Text( 'SINGLE PROMISE test resolved second.', '', '', '', 10 );\n\t\t\tassert.ok( group_promise_test == '1', 'SINGLE PROMISE test resolved second.' );\n\t\t\tgroup_promise_test = 2;\n\t\t\tdone();\n\t\t} );\n\n\t\tTTPromise.add( 'grouptwo', 'one' );\n\t\tTTPromise.add( 'grouptwo', 'two' );\n\t\tTTPromise.add( 'grouptwo', 'three' );\n\t\tTTPromise.wait( null, null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( group_promise_test == '0', 'ALL PROMISE test resolved first.' );\n\t\t\tgroup_promise_test = 1;\n\t\t\tDebug.Text( 'ALL PROMISE test resolved first.', '', '', '', 10 );\n\t\t} );\n\n\t\tTTPromise.resolve( 'grouptwo', 'one' );\n\t\tTTPromise.resolve( 'grouptwo', 'two' );\n\t\tTTPromise.resolve( 'groupone', 'one' );\n\t\tTTPromise.resolve( 'grouptwo', 'three' );\n\n\t\tTTPromise.resolve( 'Reports', 'LoadReports' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 6: resolve 2, wait on 1, global wait.', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\t\tTTPromise.add( 'a', 'b' );\n\t\tTTPromise.add( 'a', 'c' );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\t\tTTPromise.resolve( 'a', 'b' );\n\t\tTTPromise.resolve( 'a', 'c' );\n\n\t\tTTPromise.add( 'b', 'a' );\n\t\tTTPromise.add( 'b', 'b' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'already resolved promise resolved first.' );\n\t\t\tcallbacks++;\n\t\t} );\n\n\t\tTTPromise.wait( null, null, function() {\n\n\t\t\tassert.ok( callbacks == 2, 'null wait resolves after first resolution' );\n\t\t\tcallbacks++;\n\t\t\tdone();\n\t\t} );\n\n\t\tTTPromise.resolve( 'b', 'a' );\n\t\tTTPromise.resolve( 'b', 'b' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 7: resolve already resolved stack when other promises exist.', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\t\tTTPromise.add( 'a', 'b' );\n\t\tTTPromise.add( 'a', 'c' );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\t\tTTPromise.resolve( 'a', 'b' );\n\t\tTTPromise.resolve( 'a', 'c' );\n\n\t\tTTPromise.add( 'b', 'a' );\n\t\tTTPromise.add( 'b', 'b' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'already resolved promise resolved before resolving unrelated pending promises.' );\n\t\t\tdone();\n\t\t} );\n\t\tcallbacks = 2;\n\t\tTTPromise.resolve( 'b', 'a' );\n\t\tTTPromise.resolve( 'b', 'b' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 8: resolve already resolved when other promises exist.', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\t\tTTPromise.add( 'a', 'b' );\n\t\tTTPromise.add( 'a', 'c' );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\t\tTTPromise.resolve( 'a', 'b' );\n\t\tTTPromise.resolve( 'a', 'c' );\n\n\t\tTTPromise.add( 'b', 'a' );\n\t\tTTPromise.add( 'b', 'b' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'already resolved promise stack resolved before resolving unrelated pending promises.' );\n\t\t\tdone();\n\t\t} );\n\t\tcallbacks = 2;\n\t\tTTPromise.resolve( 'b', 'a' );\n\t\tTTPromise.resolve( 'b', 'b' );\n\t} );\n\n\tQUnit.test( 'TTPromise Case 9: 3 parallel stacks only 1 and 3 resolve..', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\t\tTTPromise.add( 'a', 'b' );\n\t\tTTPromise.add( 'a', 'c' );\n\n\t\tTTPromise.add( 'b', 'a' );\n\t\tTTPromise.add( 'b', 'b' );\n\t\tTTPromise.add( 'b', 'c' );\n\n\t\tTTPromise.add( 'c', 'a' );\n\t\tTTPromise.add( 'c', 'b' );\n\t\tTTPromise.add( 'c', 'c' );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\t\tTTPromise.resolve( 'a', 'b' );\n\t\tTTPromise.resolve( 'a', 'c' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'already resolved promise resolved before resolving unrelated pending promises.' );\n\t\t\tcallbacks++;\n\t\t} );\n\n\t\tTTPromise.wait( 'b', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 999, 'should NEVER reolve.' );\n\t\t\tcallbacks++;\n\t\t} );\n\t\tTTPromise.wait( 'c', null, function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 2, 'already resolved promise resolved before resolving unrelated pending promises.' );\n\t\t\tcallbacks++;\n\t\t\tdone();\n\t\t} );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\t\tTTPromise.resolve( 'a', 'b' );\n\t\t//TTPromise.resolve('a','c'); //do not fully resolve b\n\n\t\tTTPromise.resolve( 'c', 'a' );\n\t\tTTPromise.resolve( 'c', 'b' );\n\t\tTTPromise.resolve( 'c', 'c' );\n\n\t} );\n\n\tQUnit.test( 'TTPromise Case 10: identical waits fail..', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'first resolution.' );\n\t\t\tcallbacks++;\n\t\t} );\n\n\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 2, 'does not resolve in error case.' );\n\t\t\tcallbacks++;\n\t\t} );\n\n\t\twindow.setTimeout( function() {\n\t\t\tassert.ok( callbacks == 3, 'should complete after both callbacks.' );\n\t\t\tdone();\n\t\t}, 4000 );\n\n\t\twindow.setTimeout( function() {\n\t\t\tTTPromise.resolve( 'a', 'a' );\n\t\t}, 2000 );\n\n\t} );\n\n\tQUnit.test( 'TTPromise Case 11: identical waits fail after resolution of first.', function( assert ) {\n\t\tvar done = assert.async();\n\t\tvar group_promise_test = 0;\n\n\t\tTTPromise.clearAllPromises();\n\n\t\tassert.ok( Object.keys( TTPromise.promises ).length == 0, 'Callback: promises obj length = 0.' );\n\t\tassert.ok( typeof ( TTPromise.promises ) == 'object', 'TTPromise.promises exists.' );\n\n\t\tTTPromise.add( 'a', 'a' );\n\n\t\tvar callbacks = 1;\n\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t//will be run on resolve()\n\t\t\tassert.ok( callbacks == 1, 'first resolution.' );\n\t\t\tcallbacks++;\n\t\t} );\n\n\t\tTTPromise.resolve( 'a', 'a' );\n\n\t\twindow.setTimeout( function() {\n\t\t\tTTPromise.wait( 'a', 'a', function() {\n\t\t\t\t//will be run on resolve()\n\t\t\t\tassert.ok( callbacks == 2, 'does not resolve in error case: callbacks: ' + callbacks );\n\t\t\t\tcallbacks++;\n\t\t\t} );\n\n\t\t\twindow.setTimeout( function() {\n\t\t\t\tassert.ok( callbacks == 3, 'should complete after both callbacks.' );\n\t\t\t\tdone();\n\t\t\t}, 8000 );\n\n\t\t\twindow.setTimeout( function() {\n\t\t\t\tTTPromise.resolve( 'a', 'a' );\n\t\t\t}, 5000 );\n\t\t}, 2000 );\n\n\t} );\n}\n\nfunction hasDuplicates( array, assert ) {\n\tvar valuesSoFar = Object.create( null );\n\tfor ( var i = 0; i < array.length; ++i ) {\n\t\tvar value = array[i];\n\t\tif ( value in valuesSoFar ) {\n\t\t\tassert.ok( 1 == 2, value + ' Is not unique.' );\n\t\t\treturn true;\n\t\t}\n\t\tvaluesSoFar[value] = true;\n\t}\n\treturn false;\n}\n\nfunction output_system_data( val ) {\n\tswitch ( val ) {\n\t\tcase '0':\n\t\t\tif ( LocalCacheData.current_open_primary_controller ) {\n\t\t\t\tconsole.log( LocalCacheData.current_open_primary_controller.current_edit_record );\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Primary current_edit_record does not exist.', 'debugPanelController.js', '', '$(document).on(\\'change\\', \\'#tt_output_variable_select\\')', 10 );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '1':\n\t\t\tif ( LocalCacheData.current_open_report_controller ) {\n\t\t\t\tconsole.log( LocalCacheData.current_open_report_controller.current_edit_record );\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Report current_edit_record does not exist.', 'debugPanelController.js', '', '$(document).on(\\'change\\', \\'#tt_output_variable_select\\')', 10 );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\tif ( LocalCacheData.current_open_sub_controller ) {\n\t\t\t\tconsole.log( LocalCacheData.current_open_sub_controller.current_edit_record );\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Sub Controller current_edit_record does not exist.', 'debugPanelController.js', '', '$(document).on(\\'change\\', \\'#tt_output_variable_select\\')', 10 );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '3':\n\t\t\tif ( LocalCacheData.current_open_edit_only_controller ) {\n\t\t\t\tconsole.log( LocalCacheData.current_open_edit_only_controller.current_edit_record );\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Edit Only current_edit_record does not exist.', 'debugPanelController.js', '', '$(document).on(\\'change\\', \\'#tt_output_variable_select\\')', 10 );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '4':\n\t\t\tif ( LocalCacheData.current_open_wizard_controllers.length > 0 ) {\n\t\t\t\tfor ( let i = 0; i < LocalCacheData.current_open_wizard_controllers.length; i++ ) {\n\t\t\t\t\tif ( LocalCacheData.current_open_wizard_controllers[i].current_edit_record ) {\n\t\t\t\t\t\tconsole.log( LocalCacheData.current_open_wizard_controllers[i].current_edit_record );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tDebug.Text( 'Wizard current_edit_record does not exist.', 'debugPanelController.js', '', '$(document).on(\\'change\\', \\'#tt_output_variable_select\\')', 10 );\n\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\nwindow.debug_panel_html = `\n\t\t<div id='tt_debug_console' style='width:300pt; background-color:#ffffff; border:1px solid #000000; padding:2em; position:absolute; bottom:0px; right:0px; z-index:1000; border-radius-top-left:10px; border-radius-top-right:10px;'>\n\t\t<a style='float:right; padding:10px; text-align:center; color:red; font-weight:bolder; height:10px; width:10px;' class='tt_debug_close_btn' href='#'>x</a>\n\t\t<h3>Developer Tools (<span>v</span><span class='tt_version'></span>)</h3>\n\t\t<hr>\n\t\t<div class='row' id='enabled_row' style='\"+rowstyle+\"'>\n\t\t\t<input type='checkbox' id='tt_debug_enable_checkbox' checked='\"+ is_enabled +\"'>&nbsp;Enable Console Logging\n\t\t</div>\n\t\t<hr>\n\t\t<div class='row' id='set_verbosity_row' style='\"+rowstyle+\"'>\n\t\t\t<span>Debug Verbosity\n\t\t\t\t<select id=\"tt_debug_exception_verbosity\">\n\t\t\t\t\t<option value=\"0\">0</option>\n\t\t\t\t\t<option value=\"1\">1</option>\n\t\t\t\t\t<option value=\"2\">2</option>\n\t\t\t\t\t<option value=\"3\">3</option>\n\t\t\t\t\t<option value=\"4\">4</option>\n\t\t\t\t\t<option value=\"5\">5</option>\n\t\t\t\t\t<option value=\"6\">6</option>\n\t\t\t\t\t<option value=\"7\">7</option>\n\t\t\t\t\t<option value=\"8\">8</option>\n\t\t\t\t\t<option value=\"9\">9</option>\n\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t<option value=\"11\">11</option>\n\t\t\t\t</select>\n\t\t\t</span>\n\t\t</div>\n\t\t<hr>\n\t\t<div class='row' id='trigger_js_exception_row' style='\"+rowstyle+\"'>\n\t\t\t<span>Javascript Errors\n\t\t\t\t<select id=\"tt_debug_exception_type_select\">\n\t\t\t\t\t<option value=\"js_error\">JavaScript Error</option>\n\t\t\t\t\t<option value=\"js_load_script_parser_error\">Script Load Parser Error</option>\n\t\t\t\t\t<option value=\"js_load_script_404_error\">Script Load 404</option>\n\t\t\t\t</select>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t<div class='t-button' id='trigger_js_exception_button'>Trigger</div>\n\t\t\t</span>\n\t\t</div>\n\t\t<hr>\n\t\n\t\t<div class='row' id='trigger_login_timeout_row' style='\"+rowstyle+\"'>\n\t\t\t<p>Note: To trigger idle, must also clear the session at the db</p>\n\t\t\t<div class='t-button' id='trigger_js_timeout_button'>Trigger Idle</div>\n\t\t</div>\n\t\t<hr>\n\t\t<div class='row' id='tt_overlay_disable_row' style='\"+rowstyle+\"'>\n\t\t\t<input type='checkbox' id='tt_overlay_disable_checkbox' checked='\"+ overlay_is_enabled +\"'> Enable Unit Testing Mode\n\t\t</div>\n\t\t<b>Unit Testing</b>\n\t\t<div class='row' id='qunit_row' style='\"+rowstyle+\"'>\n\t\t\t<div class='t-button' id='qunit_test_button'>Run Unit Tests</div>\n\t\t\t<div class='t-button' id='grid_test'>Run Grid Tests</div>\n\t\t\t<div class='t-button' id='awesomebox_test'>Run Awesomebox Tests</div>\n\t\t\t<div class='t-button' id='WidgetTest_test'>Run Widget Tests</div>\n\t\t</div>\n\t\t<hr>\n\t\t<div class='row' id='output_variable_select_row' style='\"+rowstyle+\"'>\n\t\t\t<span>Show Data:\n\t\t\t\t<select id=\"tt_output_variable_select\">\n\t\t\t\t\t<option value=\"-1\">-- Select one --</option>\n\t\t\t\t\t<option value=\"0\">Primary controller->current_edit_record</option>\n\t\t\t\t\t<option value=\"1\">Report controller->current_edit_record</option>\n\t\t\t\t\t<option value=\"2\">Sub controller->current_edit_record</option>\n\t\t\t\t\t<option value=\"3\">Edit Only controller->current_edit_record</option>\n\t\t\t\t\t<option value=\"4\">Wizard controller->current_edit_record</option>\n\t\t\t\t</select>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t<div class='t-button' id='trigger_output_variable_select'>Show</div>\n\t\t\t</span>\n\t\t</div>\n\t\t<hr>\n\t\t<div class=\"row\">\n\t\t\t<h3>breakOn() is active </h3>\n\t\t\t<p>usage: breakOn(myObject, 'myProperty');</p>\n\t\t</div>\n\t\t<!-- keep order -->\n\t\t<hr>\n\t\t<div class='row' id='execute_script_row' style='\"+rowstyle+\"'>\n\t\t\t<b>Script Executor</b>\n\t\t\t<textarea id='arbitrary_script' style=\"width:100%;\" rows=\"5\"></textarea>\n\t\t\t<div class='t-button' id='trigger_arbitrary_script'>Run Js</div>\n\t\t</div>\n\t\t<hr>\n\t\t<div class='row' style='\"+rowstyle+\"'>\n\t\t\t<div class='t-button' id='load_vue_test_button'>Load Vue Test View</div>\n\t\t</div>\n\t</div>\n\t<div id=\"qunit_container\" style=\"display:none;\">\n\t\t<div id=\"qunit\"></div>\n\t\t<div id=\"qunit-fixture\"></div>\n\t</div>\n\t`;\n"],"names":["$","e","exception_type","script_path","result","assert","res","uuids","max","user_id","i","done","group_promise_test","callbacks","array","valuesSoFar","value","val"],"mappings":"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AO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IAEzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IAEzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EAAI,EAAI,GAAK,IACzDA,EAAO,MAAO,OAAO,cAAe,OAAQ,EA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"}